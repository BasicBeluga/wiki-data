[[Translation:en/Archive/Compilation and Ports/Compiling on Windows using MinGW]]
[[Category:en/Development/Compiling OpenTTD]]
[[Category:en/Archive/Program Descriptions]]

__FORCETOC__

==Introduction==
This page will contain guidelines for compiling OpenTTD in Win32 with MinGW.

LKRaider has made a package that automates some steps of this tutorial. Check it out at this [http://www.tt-forums.net/viewtopic.php?t=24533 forum thread].
Unfortunately it is a bit outdated.

==Information==
* Source tested: OTTD trunk at revision 9716.
* Packages used here:
** [http://switch.dl.sourceforge.net/sourceforge/mingw/MinGW-5.1.3.exe MinGW-5.1.3]
*** binutils-2.16.91-20060119-1
*** gcc-core-3.4.2-20040916-1
*** gcc-g++-3.4.2-20040916-1
*** mingw-runtime-3.12
*** w32api-3.9
** [http://heanet.dl.sourceforge.net/sourceforge/mingw/MSYS-1.0.10.exe MSYS-1.0.10]
** wget-1.9.1 (from [http://prdownloads.sf.net/mingw/wget-1.9.1-mingwPORT.tar.bz2?download mingwPORT] or [ftp://ftp.gnu.org/gnu/wget/wget-1.9.1.tar.gz sources]) -> Needed to install mingwPORTs
** zlib-1.2.3 (from [http://prdownloads.sf.net/mingw/zlib-1.2.3-mingwPORT-1.tar.bz2?download mingwPORT] or [http://prdownloads.sourceforge.net/libpng/zlib-1.2.3.tar.gz?download sources])
** libpng-1.2.8 (from [http://prdownloads.sf.net/mingw/libpng-1.2.8-mingwPORT.tar.bz2?download mingwPORT] or [http://prdownloads.sourceforge.net/libpng/libpng-1.2.8.tar.bz2?download sources])
** Directx 9.0c DevPak '''NOTE: this package isn't legal.''' ( from http://www.g-productions.net/ ) -> Optional: only if you want DirectX music support. 
* Others
** [http://subversion.tigris.org/downloads/svn-win32-1.4.2.zip SVN], to retrieve latest OTTD code.
** SDL will not be used here.

All downloads combined is approximately 30MB and then you can expect another ~30MB of OTTD sourcecode.
Expect a disk usage of about 250MB.

==Setting up MinGW==
# Run the MinGW 5.1.3 install file.
# On the install, select <i>Candidate</i>, then select the <i>Minimal install</i> plus the <i>g++ compiler</i>.
# Run the MSYS install.
#* You will see the following messages after GUI:
#* {{en/Box|This is a post install process that will try to normalize between<br>your MinGW install if any as well as your previous MSYS installs<br>if any.  I don't have any traps as aborts will not hurt anything.<br>Do you wish to continue with the post install? [yn ]}} Input "y". 
#* {{en/Box|Do you have MinGW installed? [yn ]}} Input "y".
#* {{en/Box|Please answer the following in the form of c:/foo/bar.<br>Where is your MinGW installation?}} Input your MinGW installation path.  If you mistyped it, the best solution for newbies is to re-install MSYS.
# Unzip the SVN package into your user folder on MSYS (ex: c:\msys\home\YourUser)

==Setting up MSYS==
# Copy these files to your user folder: <u>.inputrc</u> , <u>.profile</u> and <u>get latest openttd.sh</u>. All three are included in this [http://www.tt-forums.net/download.php?id=47131 zip package].

==Install SVN==
# Unzip the folders <i>bin</i>, <i>iconv</i>, <i>licenses</i>, <i>share</i> from the SVN zip file and place into /usr/local

==Testing the MinGW installation==
* Run MSYS.
* Run the following commands.{{en/Box|make -v<br>gcc -v<br>svn help}}
* They should output something.  Check if something goes wrong.

==Compiling wget==
# Place <b>wget-1.9.1-mingwPORT.tar.bz2</b> in a folder (ex: /home )
# Start MSYS.
# Make sure you are in the same directory where you placed the file and Run: {{en/Box|tar -xvjf wget-1.9.1-mingwPORT.tar.bz2<br>mkdir -p /usr/local/bin<br>cd wget-1.9.1/mingwPORT<br>cp wget.exe /usr/local/bin<br>mkdir /usr/src<br>./mingwPORT.sh}} Answer the questions by pressing enter.
# It will download wget sources, compile and install them for you.
# Remove the temporary wget: {{en/Box|rm /usr/local/bin/wget.exe}}

==Compiling zlib==
# Place <b>zlib-1.2.3-mingwPORT-1.tar.bz2</b> in a folder (ex: /home )
# Start MSYS.
# Make sure you are in the same directory where you placed the file and Run: {{en/Box|tar -xvjf zlib-1.2.3-mingwPORT-1.tar.bz2<br>mkdir /usr/src<br>cd zlib-1.2.3/mingwPORT<br>./mingwPORT.sh}} Answer the questions by just pressing enter.
# It will download zlib sources, compile and install them for you.

==Compiling pnglib==
# Place <b>libpng-1.2.8-mingwPORT.tar.bz2</b> in a folder (ex: /home )
# Start MSYS.
# Make sure you are in the same directory where you placed the file and Run: {{en/Box|tar -xvjf libpng-1.2.8-mingwPORT.tar.bz2<br>mkdir /usr/src<br>cd /home/libpng-1.2.8/mingwPORT<br>./mingwPORT.sh}} Answer the questions by just pressing enter.
# It will download pnglib sources, compile and install them for you.

==Setup DirectX==
# Rename the devpak to directx90c.tar.bz2 and extract it.
# Copy the folders <i>include</i> and <i>lib</i> to where you installed MinGW (ex: c:\msys\mingw).
# Copy the contents of the DLL folder to the <i>bin</i> folder of MinGW (ex: c:\msys\mingw\bin).

==Compiling OTTD==
'''If you cannot compile, DON'T PANIC.  Sometimes it may be due to coding errors.'''

# Start MSYS.
# Run the <u>get_latest_openttd.sh</u> script to obtain latest OTTD source. [[en/Development/FAQ development#how-can-i-obtain-the-source-code|How can I obtain the source code?]]
# Change the working directory to the OTTD source folder ( ./trunk ).
#: Run: {{en/Box|<nowiki>./configure  --with-zlib=/mingw/include/zlib.h</nowiki>}}
# Run {{en/Box|make}} Some warnings may be shown, but they usually do not matter.
# The compiling is complete when the <code>openttd.exe</code> file is made. It will be copied to the ./bin subfolder.

==Testing OTTD==
# Copy the following files from <code>(TTD)\data\</code> to <code>(OTTD)\data\</code>:{{en/Box|sample.cat<br>trg1r.grf<br>trgcr.grf<br>trghr.grf<br>trgir.grf<br>trgtr.grf}}
# Run <code>openttd.exe</code>.
# Enjoy!