[[Translation:en/Archive/Compilation and Ports/Compiling on Windows using MinGW]]
==Introduction==
This page contains guidelines for compiling OpenTTD in Win32 with '''MinGW'''.

==List of packages==
This tutorial has been tested with the following versions of the required packages:

* OpenTTD trunk at revision r20783.
* [http://sourceforge.net/projects/mingw/files/Automated%20MinGW%20Installer/mingw-get-inst-20101030/mingw-get-inst-20101030.exe/download mingw-get-inst-20101030]
* [http://alagazam.net/svn-1.6.13/svn-win32-1.6.13.zip Subversion 1.6.13]
* [http://zlib.net/zlib-1.2.5.tar.gz zlib-1.2.5]
* [http://prdownloads.sourceforge.net/libpng/libpng-1.4.4.tar.gz?download libpng-1.4.4]
* [http://www.oberhumer.com/opensource/lzo/download/lzo-2.04.tar.gz lzo-2.04]
* [http://sourceforge.net/projects/freetype/files/freetype2/2.4.3/freetype-2.4.3.tar.gz/download freetype-2.4.3]
* [http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime_0.18.1.1-2_win32.zip gettext-runtime_0.18.1.1-2]
* [http://ftp.gnome.org/pub/gnome/binaries/win32/glib/2.26/glib_2.26.0-2_win32.zip glib_2.26.0-2]
* [http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/pkg-config_0.23-3_win32 pkg-config_0.23-3]
* [http://tukaani.org/xz/xz-5.0.0.tar.gz xz-5.0.0]
* [http://download.icu-project.org/files/icu4c/4.0.1/icu4c-4_0_1-src.zip libicu-4.0.1]

==Installing MinGW and MSYS==
#Download and run mingw-get-inst. (download above)
#Select "Use pre-packaged repository catalogues".
#Review and accept the License agreement.
#Please note that MinGW should be installed to a directory path that doesn't contain any spaces. This method has been tested with a directory path of C:\MinGW.
#Select C++ Compiler and MSYS Basic System as optional components.
#Wait until every package has been downloaded and installation is finished.

==Setting up MSYS==
On Windows 7 and Vista if you have UAC enabled, to let MSYS fully work you'll need additional steps. Go to your msys folder (C:\MinGW\msys\1.0), open msys.bat with a text editor (for example Notepad) and add the following line after @echo off:
<pre>cd "C:\MinGW\msys\1.0"</pre>
And if disk C: (or where you have msys installed) is not disk where your Windows is installed add one more line
<pre>C:</pre>
After saving the file, right click on msys.bat and choose "Run as Administrator". After that programs requiring admin rights, such as install and patch will work. (You will need right-click and run as administrator every time you run msys).

==Testing MinGW/MSYS installation==
<ul><li>Open the MinGW shell (MSYS).</li>
<li>Run the following commands:<pre>make -v
gcc -v</pre></li>
<li>They should output something.  Check if something goes wrong.</li></ul>

==Compilation and installation of the required packages==
For additional information about the libraries, check part 7.1) of OpenTTD Readme. To compile and install these packages, first you need to install the following commands:

<pre>mingw-get install msys-wget
mingw-get install msys-unzip
mingw-get install msys-patch</pre>


Alternatively to the wget and tar/unzip steps that appear in the following sections, you can just download all libraries and extract them to your MSYS home folder (by default it will be C:\MinGW\msys\1.0\home\UserName).


If you get following error:
<code>configure: error: cannot run C compiled programs.</code>
, <u>one of the reasons</u> could be your anti-virus, that silently deletes a.exe binary files. Try temporary to disable anti-virus software and compile again.

==Install Subversion==
In MSYS:

<pre>mkdir /local/bin
wget http://alagazam.net/svn-1.6.13/svn-win32-1.6.13.zip
unzip svn-win32-1.6.13.zip
cd svn-win32-1.6.13
mv bin/* /local/bin/
cd ..</pre>

Alternatively you can download and extract the package, and move its contents to C:\MinGW\msys\1.0\local.

==Compiling zlib==
In MSYS:

<pre>wget http://zlib.net/zlib-1.2.5.tar.gz
tar xvfz zlib-1.2.5.tar.gz
cd zlib-1.2.5
make -f win32/Makefile.gcc BINARY_PATH=/mingw/bin INCLUDE_PATH=/mingw/include LIBRARY_PATH=/mingw/lib install
cd ..</pre>

==Compiling libpng==
In MSYS:

<pre>wget http://prdownloads.sourceforge.net/libpng/libpng-1.4.4.tar.gz?download
tar xvfz libpng-1.4.4.tar.gz
cd libpng-1.4.4
mv INSTALL INSTALL.txt
make -f scripts/makefile.mingw prefix=/mingw install
cd ..</pre>

==Compiling liblzo2==
In MSYS:

<pre>wget http://www.oberhumer.com/opensource/lzo/download/lzo-2.04.tar.gz
tar xvfz lzo-2.04.tar.gz
cd lzo-2.04
./configure --bindir=/mingw/bin --includedir=/mingw/include --libdir=/mingw/lib --enable-static
make install
cd ..</pre>

==Compiling libfreetype==
In MSYS:

<pre>wget http://sourceforge.net/projects/freetype/files/freetype2/2.4.3/freetype-2.4.3.tar.gz/download
tar xvfz freetype-2.4.3.tar.gz
cd freetype-2.4.3
./configure --prefix=/mingw/ --enable-static
make install
cd ..</pre>

==Compiling xz==
Liblzma (which is a part of xz) is required for compiling OpenTTD since [http://vcs.openttd.org/svn/changeset/21044/ r21044]. It also needs pkg-config. In MSYS:

<pre>wget http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
unzip gettext-runtime_0.18.1.1-2_win32.zip -d /mingw
wget http://ftp.gnome.org/pub/gnome/binaries/win32/glib/2.26/glib_2.26.0-2_win32.zip
unzip glib_2.26.0-2_win32.zip -d /mingw
wget http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/pkg-config_0.23-3_win32.zip
unzip pkg-config_0.23-3_win32.zip -d /mingw
wget http://tukaani.org/xz/xz-5.0.0.tar.gz
tar xvfz xz-5.0.0.tar.gz
cd xz-5.0.0
./configure --prefix=/mingw/ --enable-static
make install
cd ..</pre>

==Compiling libicu==
libicu is an optional library for compiling OpenTTD. It is used for handling of right-to-left scripts (e.g. Arabic and Persian) and it can take a long time to compile, so you can safely omit this step if you don't require libicu. In MSYS:

<pre>wget http://download.icu-project.org/files/icu4c/4.0.1/icu4c-4_0_1-src.zip
unzip icu4c-4_0_1-src.zip
cd icu
wget http://devs.openttd.org/~terkhen/libicu_4_0_1_mingw32.diff
patch -p1 -i libicu_4_0_1_mingw32.diff
cd source
./configure --prefix=/mingw --enable-static --disable-strict
make install
cd ../..</pre>

==Compiling 1.0.x and previous versions==
Compiling code from a revision earlier than [http://vcs.openttd.org/svn/changeset/19285/ r19285] (which includes any stable from 1.0.x downwards) requires an additional step to ensure that the installed libraries are detected by OpenTTD. In MSYS:

<pre>mkdir /usr/include
cp /mingw/include/zlib.h /usr/include/
cp /mingw/lib/libz.a /usr/lib/
mkdir /usr/include/lzo
cp /mingw/include/lzo/lzo1x.h /usr/include/lzo/
cp /mingw/lib/liblzo2.a /usr/lib/</pre>

==Getting the source code==
Check the [[en/Development/FAQ development#how-can-i-obtain-the-source-code|development FAQ]] to check how to obtain the source.

==Compiling OpenTTD==
If you cannot compile, don't panic. Sometimes it may be due to coding errors, but they should be reported on [http://bugs.openttd.org/ bugs.openttd.org], so they can be fixed.

<ol><li>Start MSYS.</li>
<li>Run:<pre>cd ~/trunk
./configure
make</pre>Some warnings may be shown, but they usually do not matter.</li>
<li>The compiling is complete when the openttd.exe file is made. It will be copied to the <code>./bin</code> subfolder.</li></ol>

==Testing OpenTTD==
To test your freshly compiled OpenTTD, you will need to install a [http://wiki.openttd.org/Base_graphics base graphics set]. The simplest solution is to install [http://wiki.openttd.org/Opengfx#Installing_OpenGFX_Manually OpenGFX].

[[Category:en/Development/Compiling OpenTTD]]
[[Category:en/Archive/Program Descriptions]]