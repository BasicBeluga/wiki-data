==Comments==

For the multiple roadstop patch (MRP) it'd be helpful if we could store stop-based data in the map.

For this I suggest a struct:

<pre>
typedef struct stop_t {
        //blathijs and I will think about how to optimize this: but a likely layout looks like this:
        uint8 status;    //whatever is currently in bus_stop_status and truck_stop_status
        uint8 slotA:4;   //a number > 0 indicates that the slots has been reserved. 
        uint8 slotB:4;   //the number itself contains the Time To live of the slot
} stop_t;
</pre>

This struct should then be included in the station_t struct.

Celestar

----

Signals: In order to allow for future orange and double orange signals, the signal_t.status field is 2 bits wide. This is great, I think orange and double-orange signals really have potential for smoother-flowing and more efficient rail networks. But I don't see any provisions in the code for bi-directional signals. Shouldn't status be an array with two elements to accomodate bi-directional signals? 

Buoys and checkpoints: For now, Bouys are handled by the station code. But wouldn't it be nicer and more consistent for them to be handled by the checkpoint code? Also, there should be provisions for checkpoints that cover more than one track, IMHO.

Trees: This is less important -- but shouldnt trees_t.growth be an array, so different trees can have different growth levels? :-) There certainly is room to spare in the union for this luxury.

// pv2b