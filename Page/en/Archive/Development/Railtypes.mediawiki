==Rail type labels==

These work in the same way as cargo labels.
The default rail type labels are:

* RAIL
* ELRL
* MONO
* MGLV

By default, with no translation table in place, RAIL, MONO and MGLV are used. ELRL can only be selected by specifying RAIL and a tractive type of 2 (electric).

This changes with a translation table, and the selected rail type is used directly. If the railtype is unavailable then the locomotive becomes unavailable.

The translation table is loaded by action 0, feature 8, property 11.

===Railtype fallbacks===
Testing of different rail types can be provided by use of action 7:

 Action 0: Install table consisting of RAIL 3RDR ELRL
 Action 7: Skip next line if 3RDR exists
 Action 0: Install table consisting of RAIL ELRL ELRL

This will cause rail vehicles of the second rail type to be 3RDR if that type exists, or ELRL if it doesn't, allowing some flexibility.

==Rail type translation table (action 0, feature 8, property 12)==

This is a list of labels and works in the same way as cargo translation tables.

This is an example table that sets up six rail type translations:

 1 * 30      00 08 01 06 00 12 "RAIL" "3RDR" "ELRL" "NGRL" "MONO" "MGLV"

==Rail type properties (action 0, feature 10)==

{|
|-
||Property||Format||Description
|-
||08||dword||Label
|-
||09||word||Name of railtype, from Action 4 string (Action 4 *MUST* appear before railtype definition)
|-
||0A||byte (dword ...)||Compatible rail type list (list of labels, turned into a bitmask internally)
|-
||0B||byte (dword ...)||Powered rail type list (list of labels, turned into a bitmask internally)
|-
||0C||byte||Toggle drawing of catenary: 0 = No, 1 = Yes, use global sprites, 2 = Yes, use custom sprites.
|-
||0D||byte||Acceleration model: 0 = rail, 1 = maglev, other models available?
|-
||0E||byte||Curve speed advantage, format to be decided
|-
||0F||word||Max speed limit in mph*1.6 (approximately km/h) (To be decided)
|-
||10||byte||Type of default station building graphic to use: 0 = Rail, 1 = Monorail, 2 = Maglev.
|}


A very big TODO: Figure out the best method of selecting and using sprites.

==Rail type Action3/2/1 scheme==

===Action 1===

Just a regular action 1 for sprites.

===Action 2===

Like normal, used to assign sprites from action 1 to 'cargo ids'. There are no variables for rail types.

===Action 3===

For rail types the cargo type byte specifies the type of sprites being assigned. These are as follows:

{| border = "1" cellpadding="4"
!'Cargo' type!!Sprite type!!Number of sprites
|-
|00||Track overlays for junctions||10 (6 flat pieces and 4 slope pieces)
|-
|01||Cursors and icons||16 (4 rail directions, autorail, depot, tunnel and convert rail)
|-
|02||Ground||26
|-
|03||Tunnel||8
|-
|04||Snowy/desert ground||26
|-
|05||Snowy/desert tunnel||8
|-
|06||Custom catenary||48
|-
|07||Level crossing overlay||2
|-
|08||Bridge surfaces||6 (10 sprites if we ever include diagonal bridges)
|-
|09||Depots||6 (2 sprites for each southish, 1 sprite for each northish)
|}

Not all types need to be defined, if the type is not going to be used anyway.

Executing a varaction for every rail tile would probably be quite slow, so for the moment it is done once on starting a game. For this reason, no global varaction 2 variables should be used.

==Action 7/9 additions==

{|
|-
||Condition||Description
|-
||0D||Skip if the rail type label is not defined
|-
||0E||Skip if the rail type label is defined
|-
|}

==Code Already Written==

Code to load rail type translation tables, along with adding default the labels, is already written. There is currently no code to add a new rail type.