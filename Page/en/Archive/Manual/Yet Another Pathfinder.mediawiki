[[Translation:en/Archive/Manual/Yet Another Pathfinder]]
'''Yet Another Pathfinder (YAPF)''' is the latest software algorithm used by [[en/Manual/Main Page]] to control vehicle movement.

YAPF is the third attempt at creating a pathfinder algorithm for OpenTTD. The first new algorithm was [[en/Archive/Manual/Settings/New train pathfinding|New Train Pathfinding (NTP)]], which only works on trains. The second was [[en/Archive/Manual/Settings/New global pathfinding|New global Pathfinding (NPF)]], which works on all vehicles and is quite intelligent, but bogs down the system after many vehicles have been built. The goal of YAPF is to provide the power and flexibility of NPF while at the same time being very optimized, relieving the CPU load.

The remainder of this article is meant for developers.

== Tuning ==
Several options of YAPF can be tuned up. I will not describe all of them because they are clear what they do.<br>
There 4 options (3 actualy) that are quite mysterious:<br>
rail_look_ahead_max_signals = 10<br>
rail_look_ahead_signal_p0 = 500<br>
rail_look_ahead_signal_p1 = -100<br>
rail_look_ahead_signal_p2 = 5<br>
<br>
First one checks how many signals YAPF have look ahead of our train. The next options are used to calculate penalty array using following formula:<br>
p=p0 + p1*i + p2*i*i<br>
So, we have following array as result:<br>
p[]={500,405,320,245,180,125,80,45,20,5}
<br>
Now some examples:<br>
Red,Red,Red: cost=500+405+320 -> 1225<br>
Red,Green,Red,Green: cost=500+320 -> 820<br>
<br>
The final cost will be added to path cost. This can help to reduce traffic jams when we have some trains blocking a way (4 semaphores ahead) and we have alternate way.<br>
<br>
This is internal YAPF stuff and is not supposed to be tuned really. Developer put a lot of effort to calculate right values into p0,p1,p2.<br>
The only tunable value is p1 penalty. Fine value range is from -100 to -90. If you go outside that range, penalty array will have weird values and trains would start to go not as you expect.<br>
If you want more agresive load balancing go for p1=-90 and you will get following array:<br>
p[]={500,415,340,275,220,175,140,115,100,95}

== Beta Test ==
To help out in the beta testing and to get a sneak preview, download the executable from the [[en/Archive/Community/Nightly build]].

The code can be downloaded with [[en/Development/FAQ development#source-code|Subversion]] from the trunk:

svn://svn.openttd.com/trunk

== Dependant Projects ==
You can't change one part of the code without some effect on the other parts, and pathfinding is a huge part.

==== Path Based Signalling ====
One of the main projects that has been put on hold until YAPF is finished is [[en/Archive/Manual/Yet Another PBS Patch|Path Based Signalling (PBS)]]. The PBS code was interwoven in with the NPF code, and was considered too buggy and the code too messy to stay in the main branch. Once YAPF is complete, work should begin on a completely new PBS algorithm.

==== Speed Signs ====
A modest project to control which trains go on which tracks based on their speed, [http://www.tt-forums.net/viewtopic.php?t=24187 Speed Signs] will also be affected by YAPF once it is implemented.
{{en/Stub}}

[[Category:en/Patch Settings]]
[[Category:en/Manual/Vehicles]]