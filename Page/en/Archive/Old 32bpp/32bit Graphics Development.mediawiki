[[Translation:en/Archive/Old 32bpp/32bit Graphics Development]]

''Â« Back to [[en/Development/NewGRF/Main Page]]''

Since late 2004 there has been an effort to modernize OpenTTD graphics by giving them more color and detail. This effort goes by the name of '''32bpp graphics development''', after the bit depth of our new sprites.

==Development process in a nutshell==

[[File:en/Archive/Old 32bpp/8bpp opengfx normalzoom.jpeg|thumb|right|Gameplay scene in 8bpp, at normal zoom level.]]
[[File:en/Archive/Old 32bpp/32bpp normalzoom.jpeg|thumb|right|Gameplay scene in 32bpp, at normal zoom level.]]
[[File:en/Archive/Old 32bpp/32bpp fullzoom.jpeg|thumb|right|Gameplay scene in 32bpp, at "zi4" zoom level, aka. extra-zoom.]]

A 32bpp graphics artist develops their graphics mostly in 3D modeling software, which at the end of the creative process is set to render the 3D model into a 2D sprite, which is then shown in game. Getting these [https://www.wikipedia.org/wiki/Portable Network Graphics png] sprites to show in game has required major revisions into the game's graphics engine.

Some topics concerning the feature-completeness of 32bpp graphics remain disputed to this day - to name one undecided matter, whether the game should support only the same maximum zoom level of the original game, or a few levels more.

For more information on creating 32bpp graphics, see [[en/Archive/Old 32bpp/32bit Graphics Development Documentation]].

==Normal zoom and full zoom==

There used to be a gap between zoom levels when it comes to graphics development. People would render extra-zoom or normal zoom only. These days OpenTTD supports all of it out of the box, so it makes sense for an artist to render distinct sprites for the three closest levels of zoom.

Full zoom level allows for much greater detail in the finished product, but the artist must take care not to make the sprite look busy or unclear at normal zoom levels.

==Project organization==

Artists are free to work on whatever item they desire, but it is recommended that they first [[en/Archive/Old 32bpp/32bpp graphics development tracker|check the normal]] and [[en/Archive/Old 32bpp/32bpp graphics development tracker (extra zoom)|full zoom progress trackers]] here at the wiki for items that haven't been rendered in 32bpp.

Every time an artist works on any 32bpp graphics item, it is requested that the files in question are uploaded to the [[en/Archive/Old 32bpp/32bit Graphics Development File Repository]] under the GPLv2 license. This is mostly to avoid loss of material in case development of the file ceases for technical, personal or other reasons.

New graphics, engine features, bug reports, suggestions and other discussion take place at [http://www.tt-forums.net/viewforum.php?f=36 the 32bpp graphics development section at tt-forums]. There are general threads for [http://www.tt-forums.net/viewtopic.php?f=36&t=14549 32bpp normal zoom] and [http://www.tt-forums.net/viewtopic.php?f=36&t=36474 32bpp full zoom] graphics. Administrative matters are discussed in the [http://www.tt-forums.net/viewtopic.php?f=36&t=46667 "Organizing 32bpp sprites" thread]. There is an ongoing effort in the [http://www.tt-forums.net/viewtopic.php?f=36&t=46682 "32Bpp Graphics Pack" thread] to collect completed sprites off the repository into a full, easily installed set for the end user.

Sprites can also be downloaded individually via links at the progress trackers.

When an item is completed, it is primarily the artist's responsibility to keep progress trackers up to date and notify distributors of the existence of their new content. There are volunteers working these administrative tasks but it is in the best interest of the project for the artist to do this themselves if they can.

==Not a 3D modeler? You can still contribute==

There are a few of ways to contribute to the project besides making 3D models and rendering them. Namely, administrative tasks here at the wiki (progress trackers, etc.), testing graphics and giving feedback, improving the 32bpp graphics engine by means of programming and "coding graphics".

Coding graphics means inputting correct pixel offsets for the sprites so that they line up properly in the game world. This is not difficult and we use a tool called [[en/Archive/Old 32bpp/PNGCodec]] for the coding. It is a slightly time consuming and repetitive business, which is why we need contributions there every now and then.


{{en/Archive/Old 32bpp/Navbox Graphics Development}}

[[Category:en/Archive/Community/New Graphics]][[Category:en/Archive/Old 32bpp/32bpp Graphics]][[Category:en/Archive/Old 32bpp/32bpp Graphics Developer resources|D]]