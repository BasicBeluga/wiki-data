[[Translation:en/Archive/Source/Network Protocol]]
Here below is a draft by me (TrueLight), how the network is going to be done.

It defines the protocol in great detail. What packages are sent when and by whom. Via this page we will remake network.c, and hopefully make it more stable and endian-compatible.

OpenTTD uses TCP as the transport for the network protocol. The networking could be done with UDP, but since OpenTTD depends on all packets arriving correctly and in order, any layer that could be made on top of UDP wouldn't present any significant benifits over TCP.


== TODO ==

What needs to be done?
 - UDP support
 - MOTD support
 - Ban players
 - Show what you have send to someone with ClientSpeak and PlayerSpeak
 - Finish last 2 packets (so graceful server close does not give such an ugly message to clients)

== Protocol ==


The idea: a clients logs in, verify hisself, and when it sends out a PACKET_MAP_OK, the server assumes that the client is ready and announce the user to the other players. Then the game starts. First, the joined client receives the missing frames/seed/commands between the map-frame and the current frame, so it get's in sync.
After that, all clients receive every frame (1 frame = 27ms in normal speed) a NO-OP packet when there was no command or a SERVER_COMMAND when there was a command on that frame. A client is not allowed to proceed behond the frame given in the package. When a client is done with the frame, it sends an ACK. When a server does not receive an ACK for like 5 frames, it slows down and waits for the clients.



* Client1 = one client
* ClientX = all clients connected
* Server = server

{| border="1"
|+ Network Protocol
|-
! Packet name !! From whom !! To whom !! Params !! Information
|-
!class="checked"| PACKET_SERVER_FULL
| Server 
|| Client1 || <none> || You get this packet when you try to connect to a server which is full
|-
!class="checked"| PACKET_CLIENT_GAME_INFO 
| Client1 
|| Server || <none> || Requests info about the server (current game/players/password protected)
|-
!class="checked"| PACKET_SERVER_GAME_INFO 
| Server || Client1 || GameInfo || Sends the info of the server
|-
!class="checked"| PACKET_SERVER_CLIENT_INFO
| Server || Client1 || ClientInfo || Sends info about 1 client to other clients
|-
!class="checked"| PACKET_CLIENT_JOIN 
| Client1 || Server || UserName / GamePassword || Request to join the server (with a username and a gamepassword if needed)
|-
!class="checked"| PACKET_SERVER_ERROR 
| Server || Client1 || ErrorCode || ErrorCode (login denied, kicked, stuff like that)
|-
!class="checked"| PACKET_SERVER_WELCOME 
| Server || Client1 || <none> || Tell the client that he is joined
|-
!class="checked"| PACKET_CLIENT_GETMAP 
| Client1 || Server || <none> || The client wants the map of the server
|-
!class="checked"| PACKET_SERVER_MAP 
| Server || Client1 || Savegame || The savegame of the current map (multiple packages)
|-
!class="checked"| PACKET_CLIENT_MAP_OK 
| Client1 || Server || <none> || The client received the map correctly and is ready to join
|-
!class="checked"| PACKET_SERVER_JOIN 
| Server || ClientX || Playername || Player joins the game
|-
!class="checked"| PACKET_SERVER_FRAME 
| Server || ClientX || frame || The server sends this command every frame. The clients may only proceed to this frame!
|-
!class="checked"| PACKET_SERVER_SYNC 
| Server || ClientX || RandomSeed1 || The server sends the random-seed-1 to check if the clients are still in sync
|-
!class="checked"| PACKET_CLIENT_ACK 
| Client1 || Server || frame || The client is done executing this frame and is in sync
|-
!class="checked" |PACKET_CLIENT_COMMAND 
| Client1 || Server || Command, p1, p2 || The clients sends a DoCommand to the server
|-
!class="checked"| PACKET_SERVER_COMMAND 
| Server || ClientX || Command, p1, p2, player, RandomSeed1, frame || There was a command on a frame, the server says which frame and how the RandomSeed was before the StateGameLoop.
|-
!class="checked"| PACKET_CLIENT_CHAT 
| Client1 || Server || String, Type, Player || Chat message (type: 0=broadcast, 1=team, 2=client) -- A team is all clients connected to 1 game-player.
|-
!class="checked"| PACKET_SERVER_CHAT 
| Server || ClientX || FromPlayer, Type, string || Chat message
|-
!class="checked"| PACKET_CLIENT_QUIT 
| Client1 || Server || Reason || The client wants to quit the server
|-
!class="checked"| PACKET_CLIENT_ERROR 
| Client1 || Server || ErrorNo || The client made an error and is going to be disconnected. Inform the server about it (OpenTTD crash / DeSync)
|-
!class="checked"| PACKET_SERVER_QUIT 
| Server || ClientX || Player, reason || A player left the game (also sent to the quiting player)
|-
!class="checked"| PACKET_SERVER_ERROR_QUIT 
| Server || ClientX || Player, ErrorNo || A player left the game (also sent to the quiting player) with an error
|-
!class="unclaimed"| PACKET_SERVER_SHUTDOWN 
| Server || ClientX || Reason || The server shuts down with a given reason, all clients are disconnected shortly after this
|-
!class="unclaimed"| PACKET_SERVER_NEWGAME 
| Server || ClientX || <none> || The server loaded a new game (or loaded an old game, it is just the same). The clients need to send a PACKET_CLIENT_GETMAP after this to receive the new map and rejoin
|}