[[Translation:en/Archive/Source/Network Protocol]]
Here below is a draft by me (TrueLight), how the network is going to be done.

It defines the protocol in great detail. What packages are sent when and by who. Via this page we will remake network.c, and hopefully make it more stable and endian-compatible.



== Protocol ==


The general idea behind the protocol is, is that the clients are always 1 frame behind the server, so commands can be handled correctly.

{| border="1"
|+ Network Protocol
|-
! Packet name !! Server/Client !! Params !! Information
|-
|PACKET_GAME_INFO || Client || <none> || Requests info about the server (current game/players/password protected)
|-
|PACKET_GAME_INFO || Server || GameInfo || Sends the info of the server
|-
|PACKET_JOIN || Client || UserName / GamePassword || Request to join the server (with a username and a gamepassword if needed)
|-
|PACKET_ERROR || Server || ErrorCode || ErrorCode (login denied, kicked, stuff like that)
|-
|PACKET_WELCOME || Server || Other player info || Info about other players, MOTD
|-
|PACKET_MAP || Server || Savegame || The savegame of the current map (multiple packages)
|-
|PACKET_MAP_OK || Client || <none> || The client received the map correctly and is ready to join
|-
|PACKET_SYNC || Server || RandomSeed || The server sends the random-seeds to the client for a certain frame
|-
|PACKET_COMMAND || Client || Command, p1, p2 || The clients sends a DoCommand to the server
|-
|PACKET_COMMAND || Server || Command, p1, p2, player, frame || The server says when to execute a certain DoCommand
|}