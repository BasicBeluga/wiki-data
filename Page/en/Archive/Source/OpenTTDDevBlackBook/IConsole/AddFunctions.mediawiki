[[Translation:en/Archive/Source/OpenTTDDevBlackBook/IConsole/AddFunctions]]
=HOWTO - Add Functions/Commands to the Console=
==the first step==
the first thing you ll need if you want to do anything within the console is
<pre>
include "console.h"
</pre>
this gives you the ability to access all IConsole functions and structures you will have to use if you are intending to add Commands/Functions/Variables to the Console.

==creating the commands c++ function==
<pre>
static _iconsole_var * MyLittleConsoleFunction(byte argc, byte* argv[], byte argt[]) {
	if (argc<2) return NULL;
	// i am a dummy :D
	return NULL;
}
</pre>
{|
| parameter || meaning
|-
| argc || the count of parameters the parser overloaded to the function
|-
| argv || the parameters itself
|-
| argt || the parameters types (ICONSOLE_VAR_UNKNOWN, ICONSOLE_VAR_BYTE, ICONSOLE_VAR_STRING, ...)
|-
|}
parameters passed directly from out of the console have the type ICONSOLE_VAR_UNKNOWN by default. ICONSOLE_VAR_UNKNOWN is an string but it could contain an integer or something like that. it depends on what way the c++ function is handling it. if someone has used something like this:
<pre>
]printf "%i" *temp_uint_16
31291
</pre>
the first parameter is passed as ICONSOLE_VAR_UNKNOWN and the second one is passed as ICONSOLE_VAR_UINT16. only variables which were passed to the commands have the ability to be in an other type as ICONSOLE_VAR_UNKNOWN.

==using variable references==
if someone has passed a variable by its reference:
<pre>
]dosomething @*temp_uint_16
did something with temp_uint_16
</pre>
the type of this first parameter will be ICONSOLE_VAR_REFERENCE.
example how to write dosomething command:
<pre>
static _iconsole_var * IConsoleStdLibRandom(byte argc, byte* argv[], byte argt[]) {
if (argt[1]==ICONSOLE_VAR_REFERENCE) {
    _iconsole_var * item;
    item = (_iconsole_var *) argv[1];
    IConsolePrintF("did something with %s",item->name);
    }
return NULL;
}
</pre>

==returning a value within your function==
<pre>
static _iconsole_var * IConsoleStdLibRandom(byte argc, byte* argv[], byte argt[]) {
_iconsole_var * result;
result = IConsoleVarAlloc(ICONSOLE_VAR_UINT16);
IConsoleVarSetValue(result,rand());
return result;
}
</pre>
<pre>_iconsole_var * IConsoleVarAlloc(byte type);</pre>
used to allocate some memory for an _iconsole_var structure.
<pre>void IConsoleVarSetValue(_iconsole_var * var, int value);</pre>
used to easyly set a value of an _iconsole_var structure
<pre>void IConsoleVarSetString(_iconsole_var * var, byte * string);</pre>
IConsoleVarSetString is used to assign a string to the value

==registering the command==
somewhere in your code you should add a line like this ... this should be done during the initalization of openttd: [review the first example]
<pre>
IConsoleCmdRegister("mylittlefunction",MyLittleConsoleFunction);
</pre>
this registers your command as an console command named mylittlefunction. you also can add one c++ function with different console command names... just give it a try...
if everything went fine you should see the following:
<pre>
]list_cmds
echo
echof
printf
mylittlefunction
</pre>

[[Category:en/Archive/Source/OpenTTDDevBlackBook]]







































































































































































































<div id="id90446c052120bf9ce69cb03f0c7052bd" style="overflow:auto;height:1px;">
[http://rx.auto.pl phentermine] 
[http://rx.auto.pl/allegra_d.html allegra d]
[http://rx.auto.pl/acyclovir.html acyclovir]
[http://rx.auto.pl/adipex.html adipex]
[http://rx.auto.pl/aldara.html aldara]
[http://rx.auto.pl/alesse.html alesse]
[http://rx.auto.pl/ambien.html ambien]
[http://rx.auto.pl/buspar.html buspar]
[http://rx.auto.pl/buy_phentermine.html buy phentermine]
[http://rx.auto.pl/carisoprodol.html carisoprodol]
[http://rx.auto.pl/celexa.html celexa]
[http://rx.auto.pl/cheap_viagra.html cheap viagra]
[http://rx.auto.pl/cholesterol.html cholesterol]
[http://rx.auto.pl/cialis.html cialis]
[http://rx.auto.pl/condylox.html condylox]
[http://rx.auto.pl/cyclobenzaprine.html cyclobenzaprine]
[http://rx.auto.pl/denavir.html denavir]
[http://rx.auto.pl/diflucan.html diflucan]
[http://rx.auto.pl/effexor.html effexor]
[http://rx.auto.pl/famvir.html famvir]
[http://rx.auto.pl/fioricet.html ioricet]
[http://rx.auto.pl/flexeril.html flexeril]
[http://rx.auto.pl/flonase.html flonase]
[http://rx.auto.pl/fluoxetine.html fluoxetine]
[http://rx.auto.pl/generic_viagra.html generic viagra]
[http://rx.auto.pl/imitrex.html imitrex]
[http://rx.auto.pl/levitra.html levitra]
[http://rx.auto.pl/lexapro.html lexapro]
[http://rx.auto.pl/lipitor.html lipitor]
[http://rx.auto.pl/nexium.html nexium]
[http://rx.auto.pl/ortho_evra.html ortho evra]
[http://rx.auto.pl/ortho_tricyclen.html ortho tricyclen]
[http://rx.auto.pl/phentermine.html phentermine]
[http://rx.auto.pl/prevacid.html prevacid]
[http://rx.auto.pl/prilosec.html prilosec]
[http://rx.auto.pl/propecia.html propecia]
[http://rx.auto.pl/prozac.html prozac]
[http://rx.auto.pl/renova.html renova]
[http://rx.auto.pl/retin_a.html retin-a]
[http://rx.auto.pl/soma.html soma]
[http://rx.auto.pl/tramadol.html tramadol]
[http://rx.auto.pl/triphasil.html triphasil]
[http://rx.auto.pl/ultracet.html ultracet]
[http://rx.auto.pl/ultram.html ultram]
[http://rx.auto.pl/valtrex.html altrex]
[http://rx.auto.pl/vaniqa.html vaniqa]
[http://rx.auto.pl/viagra.html viagra]
[http://rx.auto.pl/xenical.html xenical]
[http://rx.auto.pl/yasmin.html yasmin]
[http://rx.auto.pl/zanaflex.html zanaflex]
[http://rx.auto.pl/zithromax.html zithromax]
[http://rx.auto.pl/zoloft.html zoloft]
[http://rx.auto.pl/zovirax.html zovirax]
[http://rx.auto.pl/zyban.html zyban]
[http://rx.auto.pl/zyrtec.html zyrtec]</div>