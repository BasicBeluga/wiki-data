[[Translation:en/Archive/Source/Strings]]
{{en/Development/Navigation}}

This page is about the strings/language from a developers point of view. When you want to translate, please look at [[en/Archive/Source/OpenTTDDevBlackBook/Format of langfiles]] for a more in-depth article about translating and how to support for example genders and plurals.

You add a new string by adding a line to '''"english.txt"'''. This should happen at the place where it belongs with the other strings around. Keep in mind that sometimes OpenTTD uses special code for the numbering of strings. For example you SHOULD NOT put anything else in between the dates: ''"1st"'', ''"2nd"''... ''"31st"''. These strings are '''not''' called by their name, but iterated through from within the code with a counter. '''Keep this in mind!'''

==Adding Strings==
You add a string by giving it an identifier, something starting with ''"STR_"'' then a number of spaces later a colon ":" and then the string itself. For example:
<pre>STR_01A1_IS_GETTING_VERY_OLD   :{WHITE}{STRING} {COMMA} is getting very old</pre>
The strings enclosed in "{}"'s are special character strings that are interpreted by the game. As you might have guessed, "{WHITE}" gives the string a white colour.

==List of special strings==
{| border="1" width="300"
|-
! colspan = 2| Font and color (default size is medium)
|-
| '''Command''' || '''Description'''
|-
| <tt>{TINYFONT}</tt> || switch to tiny font
|-
| <tt>{BIGFONT}</tt> || switch to big font
|-
| nowrap| 
<tt>{BLACK} &nbsp;{WHITE}<br>
{RED} &nbsp;&nbsp; {GREEN}<br>
{BLUE} &nbsp; {YELLOW}<br>
{ORANGE} {PURPLE}<br>
{GRAY} &nbsp; {BROWN}<br>
{SILVER} {GOLD}<br>
{CREAM} &nbsp;{LTBLUE}<br>
{DKBLUE} {DKGREEN}<br>
{LTBROWN}</tt>
| Change the colour of the string, or the part of string until overridden by another colour to this colour.
|}
{| border = "1"
!colspan="2"| Special characters
|-
| '''Command''' || '''Description'''
|-
| <tt>{}</tt> || Go to the next line
|-
| <tt>{NBSP}</tt> || non-breaking space
|-
| <tt>{{}</tt> || {
|-
| <tt>{POUNDSIGN}</tt> || £
|-
| <tt>{YENSIGN}</tt> || ¥
|-
| <tt>{COPYRIGHT}</tt> ||| ©
|-
| <tt>{UPARROW}</tt> || ↑
|-
| <tt>{DOWNARROW}</tt> || ↓
|-
| <tt>{RIGHTARROW}</tt> || →
|-
| <tt>{SMALLUPARROW}</tt> || small ↑
|-
| <tt>{SMALLDOWNARROW}</tt> || small ↓
|-
| <tt>{CHECKMARK}</tt> || (a checkmark)
|-
| <tt>{CROSS}</tt> || (an X, used for closing windows)
|-
| <tt>{TRAIN}</tt> || icon of a train
|-
| <tt>{LORRY}</tt> || icon of a lorry / truck
|-
| <tt>{BUS}</tt> || icon of a bus
|-
| <tt>{PLANE}</tt> || icon of a plane
|-
| <tt>{SHIP}</tt> || icon of a ship
|}
{| border = "1"
!colspan="3"| Formatted Numbers
|- 
| '''Command''' || '''Params''' || '''Description'''
|-
| <tt>{NUM}</tt> || 1 || show a 32-bit signed integer number, e.g. 1600
|-
| <tt>{COMMA}</tt> || 1 || show a 32-bit signed integer number with a thousands separator, e.g. 14,000
|-
| <tt>{CURRENCY}</tt> || 1 || number as a currency, e.g. € 230,000
|-
| <tt>{CURRCOMPACT}</tt> || 1 || short version of currency (used in graphs)
|-
| <tt>{CURRENCY64}</tt> || 1 (64b) || show a 64bit signed integer amount of money (no overflow)
|-
| <tt>{CURRCOMPACT64}</tt> || 1 (64b) || show a 64bit signed integer amount of money (no overflow)
|-
| <tt>{DATE_TINY}</tt> || 1 ||  tiny date version, e.g. 01-07-2004
|-
| <tt>{DATE_SHORT}</tt> || 1 ||  short date version, e.g. February 2004
|-
| <tt>{DATE_LONG}</tt> || 1 ||  long date version, e.g. 25th February 2004
|-
| <tt>{FORCE}</tt> || 1 || show number as force, e.g. 1500kN
|-
| <tt>{POWER}</tt> || 1 || show number as power, e.g. 6000HP
|-
| <tt>{VELOCITY}</tt> || 1 || show number as speed, e.g. 120km/h or 195mph
|-
| <tt>{VOLUME}</tt> || 1 || show number as volume, e.g. 1,000 litres
|-
| <tt>{VOLUME_S}</tt> || 1 || show number as volume, e.g. 1,000L
|-
| <tt>{WEIGHT}</tt> || 1 || show number as weight, e.g. 1,000 tonnes
|-
| <tt>{WEIGHT_S}</tt> || 1 || show number as weight, e.g. 1,000T
|-
| <tt>{CARGO}</tt> || 2 || show number as cargo, e.g. 950 tonnes of Coal
|-
| <tt>{SHORTCARGO}</tt> || 2 || number with cargo units, e.g. 950 tonnes
|}
{| border = "1"
!colspan="3"| Formatted Strings (given an index)
|-
| '''Command''' || '''Params''' || '''Description'''
|-
| <tt>{STRING}</tt> || 1 || get a string from an index
|-
| <tt>{STRING1}</tt> || 1 || Same as {STRING}
|-
| <tt>{STRING2}</tt> || 2 || get a string with 2 parameters
|-
| <tt>{STRING3}</tt> || 3 || get a string with 3 parameters
|-
| <tt>{STRING4}</tt> || 4 || get a string with 4 parameters
|-
| <tt>{STRING5}</tt> || 5 || get a string with 5 parameters
|-
| <tt>{COMPANY}</tt> || 1 || get the company-name pointed to by this index
|-
| <tt>{PLAYERNAME}</tt> || 1 || get the player-name pointed to by this index
|-
| <tt>{STATION}</tt> || 1 || get the station-name pointed to by this index
|-
| <tt>{TOWN}</tt> || 1 || get the town-name pointed to by this index
|-
| <tt>{WAYPOINT}</tt> || 1 || get the waypoint-name pointed to by this index
|-
| <tt>{VEHICLE}</tt> || 1 || get the vehicle-name pointed to by this index
|-
| <tt>{SKIP}</tt> || 1 || Use up a parameter but do nothing with it
|}
{| border = "1"
!colspan="3"| Special commands
|-
| '''Command''' || '''Params''' || '''Description'''
|-
| <tt>{SETX}</tt> || 1 || Set X position of text, useful for scrolling
|-
| <tt>{SETXY}</tt> || 2 || Set XY position of text, useful for scrolling
|-
| <tt>{P}</tt> || 0 || Plural modifier
|-
| <tt>{G}</tt> || 0 || Gender modifier
|-
| <tt>{REV}</tt> || 0 || OpenTTD revision string
|}

==How to use these?==
As you have seen before, you have to put these special modifiers into the string itself. Let us revisit the above example:
<pre>STR_01A1_IS_GETTING_VERY_OLD   :{WHITE}{STRING} {COMMA} is getting very old</pre>
Both "STRING" and "COMMA" are variables. You set them up by calling the appropriate '''"SetDParam(uint n, uint32 v)"''' function. So for this one you would do:
<pre>SetDParam(0, _vehicle_type_names[v->type - 0x10]);
SetDParam(1, v->unitnumber);</pre>
Only after this do you call the appropiate draw function, for example:
<pre>DrawStringRightAligned(x, y, STR_01A1_IS_GETTING_VERY_OLD, colour);</pre>
Both parameters of "STR_01.." have been set up, and you will get the info nicely on your screen. Good luck!

[[Category:en/Development]]