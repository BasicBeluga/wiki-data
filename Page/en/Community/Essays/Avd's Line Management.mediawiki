{{en/Ambox| type=notice
| image=en/Current event.png | alt=Status
| text=The current fase of this document is a '''draft''' that discribes a possible user interface. There is currently no implementation and this document doesn't care about coding, with the exception of limitations.
}}<br /><!-- small hack -->

= Lines =

I have the feeling that many people, like me, are unhappy with the current shared orders features. While I have heard some requests to ban the current vehicles clone system, I wasn't happy with that choose. I felt more that the cloned orders are incompleet, and my hope is, by adding some more features for better vehicle management, to improve the game with much better management and easier sorting.

{{en/Warning| the content is a draft and may be unreadable for people NOT having the same idea as I do. I will try to do my best to make the content more readable in the future.}}

{{en/Note| Feedback is always possible in the discussion section, so if you want more information, have questions about this project, feel free to ask there. Suggestions are welcome too.}}

== Overview implementing features ==

* Routes with support for templates (simple for now)
* Route manager, for route managing (orders, shared orders and routes)
* Filters for better management over te orders collections
* Better lists (directory system)

== Differences between route, shared order and simple orders ==

=== Simple orders ===

Allows players to create simple orders, ideal for a small network with few vehicles.

=== Shared orders ===

Allows players to group trains with the same orders, and allows you to give orders for many vehicles at the same time.

=== Routes (or incomplete (shared) orders) *NEW*===

''Detailed information about this feature will be explained on [[en/Avd/Lines/Route]]''

Routes are an abstract version orders, given to vehicles without dependencies of vehicle types. Routes can be a template, allowing other routes, shared orders or simple orders to extend them.

To complete a template, it requires orders in the form of parameters. There are 2 types:

* A single orderlist. An example of this would be a huge drop station, where the load order still have to be defined for each (shared) order list.

* An array of orderlists. An example of could be a drop stations, with multiple stations to be served only when a train is full. This can be used for feeders.<br />A template can define a pre and a post orderlists, to be executed before and after each item of the array. It would also support orders to break, redo or continue (go to next item) the loop.

An orderlist can exist of 0 or more orders. If an order is required, this would be 1 or more orders. Support for multiple orders instead of 1 order must prevent cases where more then 1 orders (such as waypoints) are required.

== Limitations for orders ==

With adding such features, there should also be added some limitations to prevent impossible implementations. Here a short list:

* The go to order can only refer to orders in his own list of orders, you can't jump to an order declared in a template

== Vehicle management ==

The vehicle management would not change much on the first view, with the exception of 2 changes:

* There are subgroups of groups, allowing subgrouping of trains. In the front of each group, there would be 2 icons;<br />1 for the content of the current group and 1 for the content of the whole group (including subgroups).<br /> Support for saving filters would be great, but moving the filtered trains into a group would be very great.

Note that this filtering system can also be implemented in the routemanagers, but instead of moving the results in groups, we could group them in orders, shared orders or routes and may require some other filters (with focus on orders).

* Above the groups, there is an option to add filters (like a mailbox). Defining what features would make its currently out of my scope, but it would be great if there was support for filtering by groups (or not grouped trains), filter between values like age, profit of previous year etc. and support for multiple filters (in combination with logical operations like and, or, not).

== Routemanager ==
''Will be completed later''

= FAQ =
''Will be filled if there are questions''

= Todo and references =
== References ==
* [[en/Development/Design Drafts/Reworked groups]]: An overview of some problems for the implementation, but luckily also with some solutions.

== Todo ==

* Maybe a few images may be useful while explaining the differences between normal orders, shared orders and routes.