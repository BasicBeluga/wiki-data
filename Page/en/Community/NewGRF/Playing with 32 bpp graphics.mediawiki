[[Translation:en/Community/NewGRF/Playing with 32 bpp graphics]]
{{en/TOCleft}} <small><<Back to the [[en/Archive/Old 32bpp/32bit Graphics Development|32bit Graphics main page]] </small>


32bpp graphics supported in OpenTTD since '''OpenTTD 0.6''' or '''r11119''', To play, complete the following two steps.







==Normal Zoom==
# Get the available  [[en/Archive/Old 32bpp/List of downloadable 32 bpp tars|32bpp graphics]].
# Put the 32bpp graphics tar file(s) in your OpenTTD <code>data</code> directory. This is the same directory where you put your [[en/Manual/NewGRF]]s.
# In your <code>openttd.cfg</code> (freely editable with text editor of your choice), add <code>blitter = 32bpp-simple</code> under the <code>[misc]</code> section. Save the file. This is a foolproof way to get 32bit graphics working - if you want more choice, familiarize yourself with the section below.

Note that the tar files listed on this wiki are only accepted by the game if you're using the Windows version of the original game graphics. Players using the old DOS version (this is the case if the grf files are named "''trg1.grf, trgc.grf, trgh.grf, trgi.grf'' and ''trgt.grf''") have to extract the tar files to the data directory first. Then all folders in the data/sprites directory should be renamed after the corresponding grf files (e.g. ''trg1r'' to ''trg1'', ''trghr'' to ''trgh'' and so on).

===Advanced blitter options===

Even though you have 32bpp sprites set up in your <code>data</code> directory, OpenTTD does not display them by default. The game has to be told to use a 32bpp compatible blitter, also known as a sprite drawing engine. For this we usually use the <code>blitter =</code> line in <code>openttd.cfg</code>.
    
There are several blitters to choose from. They differ slightly in how they draw the sprites. Below is a list of available blitters and their properties.

;32bpp-simple
:Slower, but reliable. The <code>simple</code> blitter does no optimization at all on the sprite data, it just converts it from palettized 8bpp to 32bpp RGB.
;32bpp-optimized
:Faster. The <code>optimized</code> blitter will run-length encode the sprites' transparent regions to make drawing faster since almost every sprite is surrounded by at least some transparent areas. The optimized blitter also has animation disabled.
;32bpp-anim
:This is the same as the optimized blitter, except animation is enabled.

Sometimes for whatever reason the <code>blitter</code> setting in <code>openttd.cfg</code> cannot be used. As a fallback the blitter can be given to the OpenTTD binary as a parameter with <code>-b 32bpp-simple</code>, <code>-b 32bpp-anim</code> or <code>-b 32bpp-optimized</code>. The <code>-h</code> parameter lists all available blitters.


==Full Zoom==

* see the [[en/Community/NewGRF/Playing with 32 bpp graphics]] main page.


==Joining New Graphics Development==

Do you enjoy playing with 32bpp graphics? Would you like to contribute, in order to get full 32bpp graphics out sooner? We are in need of '''artists''', '''administrators''' (to do manual tasks such as keep the documentation organised) and '''coders''' (to help us code features to enable new graphics options)...

To draw 32bpp graphics for OpenTTD you need to know how to model in 3D (unless you are helping with some of the 2D tasks). For modeling software we suggest the open source 3D software '''blender''' available from [http://blender.org Blender site].

* visit our [[en/Archive/Old 32bpp/32bit Graphics Development Documentation]] section.

For further information on 32bpp development you can browse the [http://www.tt-forums.net/viewforum.php?f=36 OpenTTD Graphics forum on tt-forums]. Alternatively you can contact Ben Robbins, one of the leading members of the OpenTTD graphics community.


{{en/Archive/Old 32bpp/Navbox Graphics Development}}

[[Category:en/Archive/Community/New Graphics]][[Category:en/Archive/Old 32bpp/32bpp Graphics]]