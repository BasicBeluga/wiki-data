[[Translation:en/Community/Patches/Passenger and cargo destinations]]
{{en/Stub}}

Support for Passenger and cargo destinations in OpenTTD exists in the new cargo packets branch by [[en/Archive/Community/Users/Celestar]] and [[en/Archive/Community/Users/Peter1138]].

== Code ==

Available via [http://www.selenic.com/mercurial/wiki/ mercurial]:
* [http://arwen.fvfischer.de:8000/ Celestar]


So for example:

    hg clone http://arwen.fvfischer.de:8000/ cargodest-celestar

=== Concept ===

The basic idea of the implementation was to make the whole system as little intrusive as possible. The whole cargo handling system has been moved into a new base class, and the derived classes determine whether it is "routed" or "unrouted"

Check the doxygen documentation of the tree for more info, everything is documented in there

== Terms ==

There are two types of cargo now:

''Routed'' cargo is any kind of cargo that has one specific destination

''Unrouted'' cargo is any kind of cargo that behaves like previously (i.e. can be transported to any station that accepts it)

== Dependencies ==

In addition to the normal libraries and such that OpenTTD trunk requires, you will need the development headers/libraries for [http://www.boost.org/ Boost] - specifically, the Boost Graph library. Both versions 1.34 and 1.35 should work.

Under debian/ubuntu, this is provided via the libboost-graph-dev package, which also depends on the various other required portions of Boost.

So for example:

    sudo aptitude install libboost-graph-dev

== Compiling ==

The normal configure/make applies as well. Note, however, that the ./configure script currently does not support/check the boost libraries.

    ./configure
    make

== Configuring ==

A couple of new patches are available:

{|
|+ 
! GUI Category || Patch !! Values !! Description
|-
| Interface || gui.default_cargo_view || ??? || What kind of listing to display in the station window by default
|-
| Economy
|
* economy.pax_dest_type
* economy.mail_dest_type
* economy.gold_dest_type
* economy.other_dest_type
| 
* 0 = normal
* 1 = (reserved)
* 2 = destinations
|
Whether or not to use the new destination behaviour for various cargo types 
|}

== Minimap Route Network ==

(screenshots and explanations of the route network displayed in the minimap)

== Station Cargo List ==

(the different types of cargo destination lists (screenshots + explanations), the plus sign, Ctrl-click)

== Vehicle Cargo List ==

(how cargo sources/destinations are displayed in the vehicle details)

== Destination Algorithm ==

(how OpenTTD picks destinations for cargos)

== Routing Algorithm ==

(how OpenTTD picks the route/vehicles to use)