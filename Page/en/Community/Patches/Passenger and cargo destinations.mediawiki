[[Translation:en/Community/Patches/Passenger and cargo destinations]]
{{en/Stub}}

Support for Passenger and cargo destinations in OpenTTD exists in the new cargo packets branch by [[en/Archive/Community/Users/Celestar]] and [[en/Archive/Community/Users/Peter1138]].

== Code ==

Available via [http://www.selenic.com/mercurial/wiki/ mercurial]:
* [http://arwen.fvfischer.de:8000/ Celestar]


So for example:

    hg clone http://arwen.fvfischer.de:8000/ cargodest-celestar

=== Concept ===

The basic idea of the implementation was to make the whole system as little intrusive as possible. The whole cargo handling system has been moved into a new base class, and the derived classes determine whether it is "routed" or "unrouted"

Check the doxygen documentation of the tree for more info, everything is documented in there

== Terms ==

There are two types of cargo now:

''Routed'' cargo is any kind of cargo that has one specific destination

''Unrouted'' cargo is any kind of cargo that behaves like previously (i.e. can be transported to any station that accepts it)

== Dependencies ==

In addition to the normal libraries and such that OpenTTD trunk requires, you will need the development headers/libraries for [http://www.boost.org/ Boost] - specifically, the Boost Graph library. Both versions 1.34 and 1.35 should work.

Under debian/ubuntu, this is provided via the libboost-graph-dev package, which also depends on the various other required portions of Boost.

So for example:

    sudo aptitude install libboost-graph-dev

== Compiling ==

The normal configure/make applies as well. Note, however, that the ./configure script currently does not support/check the boost libraries.

    ./configure
    make

== Configuring ==

A couple of new patches are available:

{|
|+ 
! GUI Category || Patch !! Values !! Description
|-
| Interface || gui.default_cargo_view || ??? || What kind of listing to display in the station window by default
|-
| Economy
|
* economy.pax_dest_type
* economy.mail_dest_type
* economy.gold_dest_type
* economy.other_dest_type
| 
* 0 = normal
* 1 = (reserved)
* 2 = destinations
|
Whether or not to use the new destination behaviour for various cargo types 
|}

== Features and Limitations ==

''Incomplete:''

Features:
* Destinations are assigned by station size and distance
* Destinations can be activated and deactivate in a running game
* Independent settings for Passengers, Mail, Valuable-type cargo, and other cargo.
* Fast
* Network-Safe (at least according to the recent tests)

Limitations:
* Cargo generation is asymmetric even for theoretically symmetric cargo (like passengers). This is because the amount of cargo that is generated has not been modified (yet).
* Intermediate stops are not taken into account. For local trains, you'll have to set orders to each and every station it is supposed to go to.

== Minimap Route Network ==

(screenshots and explanations of the route network displayed in the minimap)

== Station Cargo List ==

The Station Cargo List will be one of your main tools to work with. To ease network optimization,
several different cargo views are available in the station view window:

=== Conventional View ===
[[File:en/Community/Patches/Svw retract.png|frame|conventional view]]
We all know this view from the early days of TTO, but it doesn't reveal much information except how much cargo we have for each type.

=== NextHop View ===
[[File:en/Community/Patches/Svw nexthop.png|frame|"nexthop" view - Shows the station the cargo wishes to go next, independent of the question whether the cargo will leave the vehicle there or not]]
We call this the NextHop view.

The term NextHop refers to the station an piece of cargo will go to next. What is important to understand that the piece of cargo might '''not''' leave the vehicle at the NextHop, should the vehicle then continue to the following NextHop.

This is quite helpful if you have a lot of cargo at a station and need to find out where you have to send your vehicles to transport them. The good thing about this view is that it's not very cluttered, since the number of NextHops is always rather limited, even for large stations.

[[File:en/Community/Patches/Svw full.png|"full" view - Shows origin and destination for everything]]

[[File:en/Community/Patches/Svw destination.png|"destination" view - Shows the ultimate destination of the cargo]]

[[File:en/Community/Patches/Svw tree.png|"tree" view - Shows a logical tree where the cargo is going from the current station, includes information on how many units transfer or arrive at subsequent stations]]

== Vehicle Cargo List ==

(how cargo sources/destinations are displayed in the vehicle details)

== Destination Algorithm ==

(how OpenTTD picks destinations for cargos)

== Routing Algorithm ==

(how OpenTTD picks the route/vehicles to use)