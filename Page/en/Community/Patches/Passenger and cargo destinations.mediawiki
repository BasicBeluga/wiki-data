[[Translation:en/Community/Patches/Passenger and cargo destinations]]
{{en/Stub}}

Support for Passenger and cargo destinations in OpenTTD exists in the new cargo packets branch by [[en/Archive/Community/Users/Celestar]] and [[en/Archive/Community/Users/Peter1138]].

== Terms ==

''Routed'' cargo is any kind of cargo that has one specific destination

''Unrouted'' cargo is any kind of cargo that behaves like previously (i.e. can be transported to any station that accepts it)

''Transit Station'' is a station where the vehicle stops, but the cargo remains in the vehicle and moves on

''Transfer Station'' is a station where the vehicle stops and the cargo deboards to continue it's trip on another vehicle

''Terminal Station'' is the station where the cargo ultimately wishes to go to


== Items for version 2 ==
* Symmetric cargo generation (Passengers and Mail), i.e. the same about of passengers go from A to B as vice versa. This requires a rewrite of the cargo generation system and is currently not within the scope of the project. It's big enough as it is
* Adjust cargo generation to network (if you only have one power station connected, you just get less coal than when you have five)
* Distinguish between a transit and transfer station, so that cargo prefers to stay in the vehicle
* Route load balancing (don't send everything via the cheapest route)
* Full handling of conditional orders

== Known problems ==
* Cargo destination view for vehicles works for trains only (Total Cargo tab).
* Very very large stations (like 20.000 or more items of cargo remaining) slow the game considerably. A fix is in progress but not completed
* The "from" display in the "Cargo" tab of the vehicles is kind of pointless.

== Code ==

Available via [http://www.selenic.com/mercurial/wiki/ mercurial]:
* [http://hg.openttd.org/developers/celestar/cargodest.hg/| Celestar]


So for example:

    hg clone http://hg.openttd.org/developers/celestar/cargodest.hg/ cargodest-celestar

=== SVN Patch ===
Download: [http://mz.openttdcoop.org/patches/cargodest_r14127.diff cargodest_r14127.diff]
(Patch made with HG rev 8608ca115990 (19674) for SVN r14127)

=== Concept ===

The basic idea of the implementation was to make the whole system as little intrusive as possible. The whole cargo handling system has been moved into a new base class, and the derived classes determine whether it is "routed" or "unrouted"

Check the doxygen documentation of the tree for more info, everything is documented in there



== Dependencies ==

In addition to the normal libraries and such that OpenTTD trunk requires, you will need the development headers/libraries for [http://www.boost.org/ Boost] - specifically, the Boost Graph library. Both versions 1.34 and 1.35 should work.

Under debian/ubuntu, this is provided via the libboost-graph-dev package, which also depends on the various other required portions of Boost.

So for example:

    sudo aptitude install libboost-graph-dev

== Compiling ==

The normal configure/make applies as well. Note, however, that the ./configure script currently does not support/check the boost libraries.

    ./configure
    make

== Configuring ==

A couple of new patches are available:

{|
|+ 
! GUI Category || Patch !! Values !! Description
|-
| Interface
| gui.default_cargo_view
|
* 0 = All sources and destinations (Full View)
* 1 = Destinations only
* 2 = Next hop only
* 3 = Tree
|
What kind of listing to display in the station window by default
|-
| Economy
|
* economy.pax_dest_type
* economy.mail_dest_type
* economy.gold_dest_type
* economy.other_dest_type
| 
* 0 = normal
* 1 = (reserved)
* 2 = destinations
|
Whether or not to use the new destination behaviour for various cargo types 
|}

== Features and Limitations ==

''Incomplete:''

Features:
* Destinations are assigned by station size and distance
* Destinations can be activated and deactivate in a running game
* Independent settings for Passengers, Mail, Valuable-type cargo, and other cargo.
* Fast
* Network-Safe (at least according to the recent tests)

Limitations:
* Cargo generation is asymmetric even for theoretically symmetric cargo (like passengers). This is because the amount of cargo that is generated has not been modified (yet).
* Intermediate stops are not taken into account. For local trains, you'll have to set orders to each and every station it is supposed to go to.
* The system determines at most one route between A and B, all cargo will take that one route.

== Minimap Route Network ==

[[File:en/Community/Patches/Paxdest-graph.png|thumb|An example of a graph showing the route network]]

The minimap got a new icon which shows the route network of the game.

== Station Cargo List ==

The Station Cargo List will be one of your main tools to work with. To ease network optimization,
several different cargo views are available in the station view window:

* Conventional View
* Detailed Views:
** Full View
** Destination View
** NextHop View
** Tree View

You can expand the conventional view to a detailed view, which gives you more information about the waiting cargo's routing. It's possible to switch between the different detailed views by CTRL+clicking onto the cargo entry, the default detailed view can be adjusted in the patch settings.

[[File:en/Community/Patches/Svw retract.png|frame|conventional view]]
=== Conventional View ===
We all know this view from the early days of TTO, but it doesn't reveal much information except how much cargo we have for each type.

The little "+" sign indicates that there is more information about this cargo type. This is available for routed and unrouted cargo, however, the unrouted cargo needs this by far not as badly as the routed stuff. Click on the "+" and you can be bombarded with loads of information.

[[File:en/Community/Patches/Svw full.png|frame|"full" view - Shows origin and destination for everything]]
=== Full View ===
This is possibly less useful a view but it's there nonetheless. It shows, for every piece of the selected cargo type, the origin and the destination. This is more for the detail-loving people among us than to really help optimizing your network.

The main problem with it is the sheer amount of entries you get even for a mid-sized station as the one displayed.

The Full View can be sorted alphabetically (by destination) or by the amount of cargo.

[[File:en/Community/Patches/Svw destination.png|frame|"destination" view - Shows the ultimate destination of the cargo]]
=== Destination View ===
Here we go simple and straightforward again. We see all the destinations are currently "in use" along with the amount. However, we don't know how the cargo is attempting to get there.

The Destination View can be sorted alphabetically or by the amount of cargo.

[[File:en/Community/Patches/Svw nexthop.png|frame|"nexthop" view - Shows the station the cargo wishes to go next, independent of the question whether the cargo will leave the vehicle there or not]]
=== NextHop View ===
We call this the NextHop view.

The term NextHop refers to the station an piece of cargo will go to next. What is important to understand that the piece of cargo might '''not''' leave the vehicle at the NextHop, should the vehicle then continue to the following NextHop.

This is quite helpful if you have a lot of cargo at a station and need to find out where you have to send your vehicles to transport them. The good thing about this view is that it's not very cluttered, since the number of NextHops is always rather limited, even for large stations.

The NextHop View can be sorted alphabetically or by the amount of cargo.

[[File:en/Community/Patches/Svw tree.png|frame|"tree" view - Shows a logical tree where the cargo is going from the current station, includes information on how many units transfer or arrive at subsequent stations]]

=== Tree View ===
This view is possibly the most useful, if you get used to it. It shows a forward-tree of the cargo and its destinations (i.e. forward tree because this tree doesn't care about where the cargo comes from).

Each level of indentation indicates an additional hop between the current station and the one displayed. So, the stations that are not indented are the NextHops. However, here we can see what amount of cargo actually uses the NextHop as a destination, and the number that uses it as a transfer point (including the ones staying on board). There, we see the NextHops from there, but only the amount from the current station (i.e. the one who the window belongs to), and so on.

This can for example be helpful to determine where to introduce new non-stop services to, to reduce the number of Hops the cargo needs to take and reduce congestion at transfer points once they become saturated.

The Tree View cannot, at this point, be sorted.

== Vehicle Cargo List ==

You can view the destinations of the loaded cargo in the "Total Cargo" Tab of train detail windows. The sources of the cargo are not shown.
For other types of vehicles it is not (yet) possible to view cargo routing information.

== Destination Algorithm ==

(how OpenTTD picks destinations for cargos)

== Routing Algorithm ==

(how OpenTTD picks the route/vehicles to use)