[[Translation:en/Development/Coding style]]
To achieve a coherent whole, here are some guidelines for the coding style used in OTTD.

* FunctionsLookLikeThis()
* Variable names/structure members are all lowercase, and may also contain _
* Variables are declared at the beginning of a block { }, as specified in ANSI-C
* Local variable names should be short
* StructsLookLikeThis
* Global variables start with a _
* Use 'const' and 'static' when possible
* ENUMS_LOOK_LIKE_THIS
* Use enums instead of #define
* Tab size is 2 spaces. Never use spaces as indentation.
* Style for if:
<pre>
 if (a==b) {
   foo();
 } else {
   bar();
 }
</pre>
: Alternatively:
<pre>
 if (a==b)
   foo();
</pre>

* { for a function starts at the second line.
<pre>
      FunctionsLookLikeThis(int i_am_a_variable)
      {
        code...
      }
</pre>
* Don't use "char" very much since its signedness is implementation-defined.

* Never declare variables halfway a function or other block. This is especially for linux coders, since gcc won't complain, but MSVC does. Up till now, I have not found an option in MSVC to allow it, nor an option in gcc to forbid/warn for it.

==Proposed amendment(s)==
* Each externally accessible function in a file should be documented in code by a comment which describes, at the minimum, the purpose, and any assumptions of the function. If it's not clear, the inputs and outputs of the function should also be documented.