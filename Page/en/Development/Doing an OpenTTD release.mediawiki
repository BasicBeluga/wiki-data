[[Translation:en/Development/Doing an OpenTTD release]]
{{en/Development/Navigation}}

These things have to be done for each release:

==Prerelease==
* backport all the fixes
* run "make regression"
* update changelog.txt
** sort order: Feature, Codechange, Fix then descending revision number
** format: - (Feature|Codechange|Fix): ([<subsection (like OSX)>])? <message> ([FS#XXX])? (rXXXXX)
** merge items that are solving a single goal
* Make a Pull Request for the website announcing the new version. Add to that the snippets that need to go to our socials.

==Release==
* Create Tag via GitHub.

==Post release==
* Wait for GitHub Actions to finish the build.
* Tag our website to make the announcement live.
* Make a tt-forums announcement.
* Make a tweet @openttdnews.
* Make a reddit post via OpenTTDNews account.
* Post in announcements on Discord (if you cannot, poke an admin or TrueBrain).
* Post a news message on Steam. Don't forget an unique image.
* Update the IRC topic.
* forwardport/merge the changes made in the prerelease
* for non-RC releases:
** Poke package maintainers on IRC: blathijs (debian), heffer (fedora).
** Ask TrueBrain to bring the release live on Steam (it already is in the "testing" branch, but needs to go to the "default" branch).
** Poke orudge to update Microsoft Store.


==After creating a branch for a new version==
* Apply changes similar to [https://github.com/OpenTTD/OpenTTD/pull/7319 PR#7319] (a67ee025294278f9113a1c8bcb5ee91d9e174f69)
** Add a new (empty) AI compatibility script in bin/ai/
** Add the new version to CheckAPIVersion in src/ai/ai_info.cpp + src/script/api/script_info_docs.hpp
** Add the new version to src/script/api/ai_changelog.hpp
** Update the version of regression in bin/ai/regression/regression_info.nut
** Update the version in src/rev.cpp.in
** Add a note to src/saveload/saveload.h about which savegame version is used in the branch.
* Backport changelog to master branch


