[[Translation:en/Development/Script/Save and Load]]
== Save ==
If you create a <code>Save()</code> function in your AI, you can store some data inside the savegame. You can only store integers, strings, arrays and tables. Instances of classes can't be saved. Please note that this includes AIList, so if you want to store an AIList, you have to convert it to an array or table on save and convert it back on load. As soon as the users saves the game, the <code>Save()</code> function of your AI is called. Your AI can be doing anything at that moment. The <code>Save()</code> function should return a table with the information you want to store. That table can contain integers, strings, arrays and tables, but only nested to a maximum level of 5 deep. 

== Load ==
If an savegame with an AI 

== Example Save() / Load() code ==
 class testai extends AIController
 {
   constructor()
   {
     counter = 0;
   }
 
   counter = null;
 };
 
 function testai::Save()
 {
   local table = {counter_value = this.counter};
   return table;
 }
 
 function testai::Load(data)
 {
   if (data.rawin("counter_value")) {
     this.counter = data.rawget("counter_value");
   }
 }
 
 function testai::Start()
 {
   while(true) {
     AILog.Info("Tick " + this.counter);
     this.Sleep(70);
     this.counter++;
   }
 }