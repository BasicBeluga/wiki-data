[[Translation:en/Archive/Manual/Yet Another Pathfinder]]
{{es/Traducción|en/Archive/Manual/Yet Another Pathfinder|20}}
{Ampliar/Es|Configuración}}
El '''YAPF''' ('''Yet Another Pathfinder''', traducido: ''"Sin embargo otro buscador de rutas"'') es el nombre que recibe el algoritmo más reciente que utiliza el software de [[es/Manual/Main Page|OpenTTD]] para controlar el movimiento de los vehículos.

El YAPF es el tercer intento de crear un algoritmo para el pathfinder (buscador de rutas) de OpenTTD.
El primero fue el [[es/Archive/Manual/Settings/NTP|NTP]] (''New Train Pathfinding'', traducido ''"Nuevo buscador de rutas para trenes"''), que sólo funcionaba para trenes.
El segundo fue el [[es/Archive/Manual/Settings/NPF|NPF]] (''New global Pathfinding'', traducido "Nuevo buscador de rutas global"), que funcionaba para todos los vehículos y era muy inteligente, pero el sistema se atascaba después de construir muchos vehículos. El objetivo del nuevo YAPF es proporcionar la potencia y flexibilidad del NPF, pero que al mismo tiempo esté más optimizado, aliviando la carga de la CPU.

El resto de este artículo está pensado para desarrolladores.

{{es/Pendiente de traducción}}

== Improvements over NPF ==

According to a [http://www.tt-forums.net/viewtopic.php?t=32774 forum post by KUDr], there are 3 major improvements in YAPF compared to NPF:

*NPF creates a node for each tile while YAPF extends the node by following the tile/trackdir until something important (station, waypoint, choice, etc.) is seen. This node extension is called a "segment".
*YAPF caches its segments - begin/end tile/trackdir, cost, last signal tile/trackdir, etc.
*YAPF has a much more complex structure - it is template based to allow the compiler to optimize calls between YAPF modules by inlining.

These improvements increase the performance of YAPF over NPF but also make the code more complex and harder to understand.

== Tuning ==
Several options of YAPF can be tuned up. I will not describe all of them because they are clear what they do.<br>
There are 4 options (3 actually) that are quite mysterious:<br>
rail_look_ahead_max_signals = 10<br>
rail_look_ahead_signal_p0 = 500<br>
rail_look_ahead_signal_p1 = -100<br>
rail_look_ahead_signal_p2 = 5<br>
<br>
First one checks how many signals YAPF have look ahead of our train. The next options are used to calculate penalty array using following formula, where the parameter "i" is the value of the rail_look_ahead_max_signals :<br>
p=p0 + p1*i + p2*i*i<br>
So, we have following array of signal penalties for the specified number in rail_look_ahead_max_signals as result:<br>
p[]={500,405,320,245,180,125,80,45,20,5}
<br>
Now some examples.<br>
For (the first) 3 signals: Red,Red,Red: penalty=500+405+320=1225<br>
For (the first) 4 signals: Red,Green,Red,Green: penalty=500+0+320+0=820<br>
<br>
The final cost will be added to path cost. This can help to reduce traffic jams when we have some trains blocking a way (4 semaphores ahead) and we have alternate way.<br>
<br>
This is internal YAPF stuff and is not supposed to be tuned really. Developer put a lot of effort to calculate right values into p0,p1,p2.<br>
The only tunable value is p1 penalty. Fine value range is from -100 to -90. If you go outside that range, penalty array will have weird values and trains would start to go not as you expect.<br>
If you want more agresive load balancing go for p1=-90 and you will get following array:<br>
p[]={500,415,340,275,220,175,140,115,100,95}<br>

== Dependent Projects ==
Pathfinding is very important part of OpenTTD, and introducing a new pathfinder means extensive changes in the code. This was the reason, why development of some new features had been put on hold, until YAPF was finished. As YAPF is now fully introduced, these projects may again be developed.

=== Speed Signs ===
There was a modest project to control which trains go on which tracks based on their speed, [http://www.tt-forums.net/viewtopic.php?t=24187 Speed Signs]. So far this project hasn't been picked up after implementing YAPF. Other patches that allow player to control train pathfinding can be found in [http://www.tt-forums.net/viewforum.php?f=33 development forums].

[[Category:es/Manual/Configuración y preferencias]]
[[Category:es/Manual/Vehículos]]