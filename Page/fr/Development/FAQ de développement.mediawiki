[[Translation:en/Development/FAQ development]]
{{fr/Traduction|en/Development/FAQ development|70}}


Cet article couvre les questions concernant le développement de OpenTTD, c.à.d. l'utilisation de SVN, le téléchargement des sources, le paramétrage des compilateurs, etc.

===Contribuer au projet===
====Que puis-je faire pour contribuer au projet?====
:* Cela dépend de vos talents. Si vous êtes bon codeur, vous pourriez vouloir aider à implémenter de nouvelles fonctionnalités ou à corriger des erreurs. D'autres sortes d'aides sont aussi toujours les bienvenues, comme la [[fr/Archive/Community/Internationalisation|traduction]] en d'autres langues, le dessin de graphismes, la rédaction de ce manuel, ou la fabrication de sons et de musiques.

====En quel langage OpenTTD est-il écrit?====
:* OpenTTD est programmé en C++, la version ANSI-C utilisée par MS Visual Studio, pour être plus spécifique. Lisez les [[fr/Development/Style de codage|directives de codage]] pour avoir une référence sur la manière de structurer votre code.

====J'ai corrigé un bogue/ajouté une fonctionnalité. Comment puis-je le soumettre dans la base de code?====
:*Faites un fichier diff (ou fichier patch) de vos changements et soumettez-le à [http://bugs.openttd.org Flyspray]. Merci de consulter le traqueur d'ajouts soigneusement pour voir si les développeurs ont des suggestions. Si tout est OK avec votre ajout, il sera fusionné dans l'arbre SVN.

====Je veux devenir un développeur officiel de OpenTTD! Comment faire?====
:*La seule manière d'y entrer est de faire constamment des ajouts, surtout les corrections de bogues. Vérifiez la liste des [http://bugs.openttd.org/index.php?string=&project=1&type=1 bogues connus] et faites attention à notre [[fr/Development/Style de codage|style de codage]] favori. Quand la somme de temps que vous aurez passé à coder OpenTTD atteindra un certain niveau, les chances augmenteront pour que vous receviez un compte SVN et soyez ajouté à la liste.

===Code source===
====Qu'est-ce que le code source?====
:* [http://www.google.com/search?q=C%2B%2B+tutorial Ne vous inquiétez pas de cela, et ne vous embêtez pas à lire la suite]

====Comment puis-je obtenir le code source?====
:* Dernière version livrée:  [http://www.openttd.org/download-stable Allez sur le site web]
:* [[fr/Archive/Community/Construction de nuit|constructions nocturnes]]: [http://nightly.openttd.org/ Page d'accueil pour obtenir la construction nocturne]
:* Code le plus à jour en utilisant Subversion: <code>svn checkout svn://svn.openttd.org/trunk</code>
:* Ou Mercurial: <code>hg clone http://hg.openttd.org/openttd/trunk.hg</code>

====Qu'est-ce que la version SVN?====
:* SVN, alias [https://www.wikipedia.org/wiki/fr:Apache Subversion Subversion], est un système de contrôle de version, comme CVS. Sommairement, il trace les changements au code source du jeu. La version SVN est le dernier (encore saignant) code source du jeu.

====Sur quels systèmes d'exploitation tourne Subversion?====
:* Toutes les déclinaisons modernes de Unix, Win32, BeOS, OS/2, Mac OS X. Subversion est écrit en C ANSI et utilise APR, la bibliothèque portable d'Apache, comme couche de portabilité. Le client Subversion tournera partout où tourne APR, c'est-à-dire à la plupart des endroits.

====Comment puis-je alors obtenir la version SVN?====
:* Tout d'abord, vous devez télécharger le logiciel client pour votre système d'exploitation, qui se connectera au serveur SVN et téléchargera le code source. Vous pouvez le récupérer de la page d'accueil du projet SVN à http://subversion.tigris.org/. Si vous utilisez Windows, vous pourrez prendre [http://tortoisesvn.tigris.org/ TortoiseSVN] car il s'intègre bien avec Explorer, et vous n'aurez pas à lancer de choses en ligne de commande.<br><br>Ensuite, vous devez paramétrer le client pour utiliser l'URL du dépôt, qui est ''"svn://svn.openttd.org/trunk"''. Cela dépendra du logiciel que vous aurez choisi, mais vous pourrez trouver comment faire dans la documentation incluse avec.<br><br>Sur Linux (Unix), vous pouvez utiliser la commande ''"svn co svn://svn.openttd.org/trunk/"''.

====Subversion n'a pas été porté sur ma plateforme / Je ne veut pas installer plus de logiciels - y a-t-il un autre moyen pour obtenir le code source?====
:* Vous pouvez consulter le dépôt en ligne sur http://svn.openttd.org/; vous pouvez aussi vérifier des copies afin d'obtenir un ensemble complet de code source. Vous pouvez enfin obtenir le dernier code source nocturne depuis http://nightly.openttd.org/.

====Maintenant que j'ai le code source, comment puis-je le compiler?====
:* Compilez OpenTTD sur Windows en utilisant [[fr/Archive/Community/BuildOTTD|BuildOTTD]]
:* Compilez OpenTTD sur Windows en utilisant [[:Category:fr/Microsoft Visual C++|Microsoft Visual C++]]
:* Compilez OpenTTD sur Windows en utilisant [[fr/Compiler sur MinGW|MinGW]]
:* Compilez OpenTTD sur [[fr/Archive/Compilation and Ports/Linux|Linux]]
:* Compilez OpenTTD sur [[fr/Compiler sur Mac|Mac OS X]]
:* Compilez OpenTTD sur [[fr/Archive/Compilation and Ports/Compiler sur Solaris|Solaris]]

====I had a problem compiling! What should I do?====
:* This is not a compiling FAQ, try to ask your compiler vendor for help.
====Why did the developers decide to use Subversion?====
:* Subversion (SVN) was chosen over CVS because it is more advanced and easier to use. Also a lot of the developers don't like CVS any more now they know SVN.
:* SVN was "chosen" over distributed version control systems (DVCS) like Bazaar, Darcs, git, Mercurial and SVK because at the time the choice had to be made none of these existed. GNU arch was one of the few DVCSes that existed but was difficult to learn and understand. Later on a versioning API for NewGRFs was made out of the SVN revision so migrating to a DVCS would remove that capability breaking lots of existing NewGRFs.

====What is the point of a version control system? Why don't they just upload the source code to an FTP directory?====
:* Version control systems keep track of all the changes, when they were made and by who. If the developers later find out something they did was a mistake and broke something important they may have to rewrite it from scratch. With this they can just 'checkout' a revision from when it was working. It also allows the developers to add comments so they know what changes have been done.
====How do I make a diff file to share my changes with other coders?====
:* In Linux, use the command "svn diff > mypatch.diff" from the source directory to create a diff file.
:* In Windows, you can do the same from the command prompt, or, if you have Tortoise SVN, right button in the source directory and press Create Patch. It will ask for a location and filename.

====How to apply a patch?====
It's usually best to apply patches to the revision stated by the patch creator.

Different version control systems use different ways of expressing changes. Currently, there are SVN type patches and HG/GIT type patches.
To know what you have, open the patch file with a text editor, and look at the first few lines.

A SVN type patch starts like
<pre>
Index: src/gfx.cpp
===================================================================
--- src/gfx.cpp (revision 20024)
+++ src/gfx.cpp (working copy)
@@ -641,14 +641,13 @@
...
</pre>

and a HG/GIT type patch starts like
<pre>
diff --git a/src/gfx.cpp b/src/gfx.cpp
--- a/src/gfx.cpp
+++ b/src/gfx.cpp
@@ -641,14 +641,13 @@
...
</pre>
The crucial difference is the <code>a/</code> and <code>b/</code> additions at the lines starting with <code>---</code> and <code>+++</code>.


*'''Linux:''' Type the following line into a console (replace patch_name with the filename of the patch):
:<code>patch -p0 < patch_name</code> (for SVN type patches). However, in some cases you might need <code>patch -p1 < patch_name</code> (for HG/GIT type patches).
 
*'''Windows:''' Make sure you have [http://tortoisesvn.tigris.org TortoiseSVN] installed.
{{en/Warning| TortoiseSVN can only handle SVN type patches, it '''CANNOT''' handle HG/GIT type patches!!}}
:Right-click on the folder with the OpenTTD source code, open the TortoiseSVN submenu and select 'Apply Patch...'. Browse to the patch file and select it. Then, right click on the 'File Patches' window and click on 'Patch All'. After you're done, close the TortoiseMerge window.

[[Category:en/FAQs]]
[[Category:en/Development]]