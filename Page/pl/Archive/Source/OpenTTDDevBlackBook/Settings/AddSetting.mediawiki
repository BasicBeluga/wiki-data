[[Translation:en/Archive/Source/OpenTTDDevBlackBook/Settings/AddSetting]]
<!--{{DevDoc}}-->{{pl/Development/Rozwój}}

<!--{{Outdated|Advanced Settings have been replaced by Settings}}-->
{{pl/Nieaktualizowane|Ustawienia Zaawansowane zostały zastąpione Ustawieniami}}

W tym artykule krótko wyjaśniono, jak można utworzyć niestandardową zmienną ustawień, zmieniając kod źródłowy OpenTTD. Samouczek opisuje proces dodawania dwóch dodatkowych opcji do okna dialogowego ''Ustawienia zaawansowane'' - jednej opcji liczby całkowitej i jednej wartości logicznej.



==Sekcje==
Różne kategorie ustawień można zobaczyć w oknie ''Ustawienia zaawansowane'' :

*[[en/Archive/Manual/Settings/Advanced Settings/Interface|Interface]]
*[[en/Archive/Manual/Settings/Advanced Settings/Construction|Construction]]
*[[en/Archive/Manual/Settings/Advanced Settings/Vehicles|Vehicles]]
*[[en/Archive/Manual/Settings/Advanced Settings/Stations|Stations]]
*[[en/Archive/Manual/Settings/Advanced Settings/Economy|Economy]]
*[[en/Archive/Manual/Settings/Advanced Settings/Competitors|Competitors]]

Podczas dodawania zmiennych, drobne ustawienia pojedynczej linii są ściśnięte w odpowiednie miejsce na liście, podczas gdy większe grupy ustawień są dodawane na końcu sekcji. W tym samouczku dodamy dwa atrybuty do sekcji Ekonomia-> Miasto:

* ''Enable Godzilla-mode'' (bool)
* ''Number of Godzilla's'' (integer)

Zdecydowanie zaleca się korzystanie z [http://docs.openttd.org/ dokumentacji doxygen] w celach informacyjnych podczas interakcji z kodem źródłowym.

==Przegląd==
Podczas tego samouczka liczba plików zostanie zmieniona:

* [http://svn.openttd.org/trunk/src/lang/english.txt english.txt]
* [http://svn.openttd.org/trunk/src/settings_type.h settings_type.h]
* [http://svn.openttd.org/trunk/src/settings_gui.cpp settings_gui.cpp]
* [http://svn.openttd.org/trunk/src/table/settings.ini settings.ini]
* [http://svn.openttd.org/trunk/src/saveload/saveload.cpp saveload.cpp]

Aby to dokładnie zrozumieć - radzimy rozejrzeć się po wszystkich tych plikach i spróbować poczuć, jak są one zbudowane i jak ogólnie się to robi.. 

===Plik tłumaczenia - ''english.txt''===
Wszystkie ciągi tekstowe w OpenTTD są zapisywane w plikach językowych. Jedynym wymaganym tłumaczeniem jest Angielski - ale jeśli znasz więcej języków, możesz również dodawać tłumaczenia.

Chcemy dodać 4 ciągi: 2 nazwy zmiennych i 2 opisy tych zmiennych. Pamiętaj, że wszystkie ciągi ustawień powinny mieć prefiks 'STR_CONFIG_SETTING_'' . rozszerzenie. 

<pre>
STR_CONFIG_SETTING_ENABLE_GODZILLA                :{LTBLUE}Enable Godzilla mode {ORANGE}{STRING2}
STR_CONFIG_SETTING_ENABLE_GODZILLA_HELPTEXT       :Enable/disable Godzilla mode
STR_CONFIG_SETTING_NUMBER_GODZILLAS               :{LTBLUE}Number of Godzillas: {ORANGE}{STRING2} 
STR_CONFIG_SETTING_NUMBER_GODZILLAS_HELPTEXT      :Enter how many Godzillas that should be present in the game (0-100)
</pre>

''(spójrz na [http://bundles.openttdcoop.org/eints/nightlies/LATEST/docs/index.html dokumentacja biblioteki Eints], jeśli chcesz dowiedzieć się więcej o systemie ciągów)''

Te zmienne powinny być umieszczone w naturalnym miejscu - umieszczam je zaraz po <code>STR_CONFIG_SETTING_MODIFIED_ROAD_REBUILD_HELPTEXT</code>. Zauważ, że w tym pliku nie ma zakładek, tylko spacje.

===Zmienna sekcja deklaracji i ustawień - ''settings_type.h''===
Deklaracja zmiennych znajduje się w [http://svn.openttd.org/trunk/src/settings_type.h settings_type.h]. Musimy znaleźć odpowiednią kategorię - to są wybory:

<code>
 struct GameSettings {
 	 DifficultySettings   difficulty;         ///< settings related to the difficulty
 	 GameCreationSettings game_creation;      ///< settings used during the creation of a game (map)
 	 ConstructionSettings construction;       ///< construction of things in-game
 	 AISettings           ai;                 ///< what may the AI do?
 	 ScriptSettings       script;             ///< settings for scripts
 	 class AIConfig      *ai_config[MAX_COMPANIES]; ///< settings per company
 	 class GameConfig    *game_config;        ///< settings for gamescript
 	 PathfinderSettings   pf;                 ///< settings for all pathfinders
 	 OrderSettings        order;              ///< settings related to orders
 	 VehicleSettings      vehicle;            ///< options for vehicles
 	 EconomySettings      economy;            ///< settings to change the economy
 	 LinkGraphSettings    linkgraph;          ///< settings for link graph calculations
 	 StationSettings      station;            ///< settings related to station management
 	 LocaleSettings       locale;             ///< settings related to used currency/unit system in the current game
 };
</code>

<code>EconomySettings</code> wygląda dobrze - wyszukaj <code>struct EconomySettings</code> i dodaj deklaracje dwóch zmiennych:

<code>
 /** Settings related to the economy. */
 struct EconomySettings {
     // lots of other variables
     bool godzilla_mode;            ///< Enables Godzilla mode
     uint8 number_godzillas;        ///< Number of Godzillas
 }
</code>

Zauważ, że komentarze mają <code>/<</code> 'prefix' (przedrostek) do tworzenia dokumentacji za pomocą [http://docs.openttd.org/ doxygen]. 

===Nazwa zmiennej w pliku konfiguracyjnym - ''settings_gui.cpp''===
Nazwa, w której będzie miała zmienna [[pl/Archive/Manual/Settings/Openttd.cfg|openttd.cfg]] są zdefiniowane w [http://svn.openttd.org/trunk/src/settings_gui.cpp settings_gui.cpp]. Tutaj wybrana jest również konkretna podstrona, na której będzie wyświetlana zmienna. 

Ekonomia->Miejscowość wygląda na dobre dopasowanie, więc dodamy te wpisy do <code>_settings_economy_towns[]</code>:

<code>
 SettingsPage *towns = environment->Add(new SettingsPage(STR_CONFIG_SETTING_ENVIRONMENT_TOWNS));
 {
     \\ lots of other entries
     towns->Add(new SettingEntry("economy.godzilla_mode"));
     towns->Add(new SettingEntry("economy.number_godzillas"));
 }
</code>

===Variable specifics - ''settings.ini''===

Musimy dodać zestaw instrukcji do OpenTTD, aby obsługiwał dane we właściwy sposób. W ten sposób dodajemy bloki danych [http://svn.openttd.org/trunk/src/table/settings.ini settings.ini] - każdy blok reprezentuje jedną zmienną. 

Istnieją różne struktury danych i zaawansowane tematy w tym obszarze, ale na tym się skupimy '''SDT_VAR''' i '''SDT_BOOL''' - dwa najczęściej używane. Poniżej znajduje się przykładowa konfiguracja naszych zmiennych:

<code>
 [SDT_VAR]
 base     = GameSettings
 var      = economy.number_godzillas
 type     = SLE_UINT8
 from     = 189
 to       = SL_MAX_VERSION
 flags    = 0
 guiflags = SGF_NEWGAME_ONLY
 def      = 10
 min      = 0
 max      = 100
 interval = 5
 str      = STR_CONFIG_SETTING_NUMBER_GODZILLAS
 strhelp  = STR_CONFIG_SETTING_NUMBER_GODZILLAS_HELPTEXT
 strval   = STR_JUST_INT
</code>

Fundamentalnie:

*mamy zmienną należącą do EconomySettings, która z kolei należy do GameSettings
*zmienna nosi nazwę ''number_godzillas'' i jest 8-bitową liczbą całkowitą bez znaku
*ustawienie można zmienić tylko przed rozpoczęciem gry (stąd guiflag ''newgame''  )
*wartość domyślna to 10, min->max to 0-100, a każdy krok to 5.
*''STR_JUST_INT''  informuje grę, jak reprezentować dane na ekranie.

 [SDT_BOOL]
 base     = GameSettings
 var      = economy.godzilla_mode
 from     = 189
 to       = SL_MAX_VERSION
 guiflags = 0
 def      = false
 str      = STR_CONFIG_SETTING_ENABLE_GODZILLA
 strhelp  = STR_CONFIG_SETTING_ENABLE_GODZILLA_HELPTEXT

Jedyną zmianą z góry jest to, że nie ma flagi gui - to ustawienie może zostać zmienione w grze.

W przeciwnym razie, jeśli nie zostaną określone, zostaną użyte wartości domyślne:

 [defaults]
 flags    = 0
 guiflags = 0
 interval = 0
 str      = STR_NULL
 strhelp  = STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT
 strval   = STR_NULL
 proc     = NULL
 load     = NULL
 from     = 0
 to       = SL_MAX_VERSION
 cat      = SC_ADVANCED

Spróbuj znaleźć naturalne miejsce w pliku dla swoich ustawień. Umieściłem go tuż pod ''economy.initial_city_size'' blok.

Poniżej znajduje się szczegółowe wyjaśnienie niektórych atrybutów:

====Variable configuration options====

* '''base''': GameSettings
* '''var''': Nazwa zmiennej
* '''type''': rozmiar danych dla zmiennej - nie jest wymagany dla BOOL, ale może mieć różne rozmiary; SLE_UINT8, SLE_INT16, SLE_UINT32, etc.   etc... wybierz to, czego potrzebujesz
* '''flags''': Gdzie do zapisu ('save') data/network sync:

{|
|-
| '''SLF_NOT_IN_SAVE''' - do not save with savegame, basically client-based
|-
| '''SLF_NOT_IN_CONFIG''' - do not save to config file
|-
| '''SLF_NO_NETWORK_SYNC''' - do not synchronize over network (but it is saved if SLF_NOT_IN_SAVE is not set)
|-
| '''SLF_ALLOW_CONTROL''' - allow control codes in the strings
|-
| '''SLF_ALLOW_NEWLINE''' - allow new lines in the strings
|}
* '''guiflags''': Affects how the option is displayed
{|
|-
| '''SGF_0ISDISABLED''' - The feature is disabled (greyed out)
|-
| '''SGF_DISPLAY_ABS''' - display absolute value of the setting
|-
| '''SGF_MULTISTRING''' - the value represents a limited number of string-options (internally integer)
|-
| '''SGF_NETWORK_ONLY''' - this setting only applies to network games
|-
| '''SGF_CURRENCY''' - the number represents money, so when reading value multiply by exchange rate
|-
| '''SGF_NO_NETWORK''' - this setting does not apply to network games; it may not be changed during the game
|-
| '''SGF_NEWGAME_ONLY''' - this setting cannot be changed in a game
|-
| '''SGF_SCENEDIT_TOO''' - this setting can be changed in the scenario editor (only makes sense when SGF_NEWGAME_ONLY is set)
|-
| '''SGF_PER_COMPANY''' - this setting can be different for each company (saved in company struct)
|}
* '''def''': default value (true or false for BOOL, any valid value for VAR)
* '''min''', '''max''', '''interval''': min value, max value and interval by which integer value increments/decrements when using the yellow arrows (only applicable to VAR, obviously) 
* '''str''': the string used in the language file for the patch setting when displayed in the Patch Settings control panel. If you don't need to display it, just leave it as NULL.
* '''strhelp''': the help string displayed when selecting the option in the menu.
* '''strval''': What kind of value a SDT_VAL is. There are several options, but the most common are:
** '''STR_JUST_INT''' - integer
** '''STR_JUST_COMMA''' - float
* '''proc''': the procedure to call when the value is changed.
*'''from''', '''to''': Range of OpenTTD versions for which the setting is valid (see below)
* '''cat''': Which category the setting belongs to. Defines if the setting is shown based on if basic, advanced or expert filtering is chosen in the filtering in the advanced settings menu.
** SC_BASIC
** SC_ADVANCED
** SC_EXPERT

====Robienie swojego budowania ('build') kompatybilnym ze starszymi zapisami ('savegames')====
[[File:en/Archive/Source/Setting tutorial small.png|right|frame|Rezultat Finalny]]

Jeśli nie użyjesz flagi <code>SLF_NOT_IN_SAVE</code> , OpenTTD spodziewa się znaleźć twoją zmienną w każdej zapisanej grze. Dlatego ważne jest, aby powiedzieć grze, z której wersji zostało dodane to ustawienie. Numer wersji zapisanej gry znajduje się na początku [http://svn.openttd.org/trunk/src/saveload/saveload.cpp saveload.cpp] .

Gdy OpenTTD ładuje fragment danych, porównuje wersję, w której został skompilowany, z wersją w zapisanej grze. Sprawdzając atrybuty  <code>to</code> i <code>from</code> w ustawieniach, można sprawdzić, czy obsługuje tę funkcję, czy nie.

W ten sposób możesz kontrolować, czy twoja funkcja jest zapisywana, a jeśli tak, to czy zapisywanie jest zgodne z poprzednimi wersjami.

'''Note:''' Jeśli zdefiniujesz dowolne zmienne bez flagi <code>SLF_NOT_IN_SAVE</code> w ustawieniach, wszystkie zapisy dokonane na twojej kompilacji będą niezgodne ze wszystkimi innymi wersjami OpenTTD.

Aby pozwolić na coś przeciwnego (ładuj stare gry przy użyciu swojej kompilacji), powiesz OpenTTD, że wprowadziłeś nową funkcję i ''zwiększysz wersję zapisu gry'' ('increase the savegame version') . Jeśli bieżący bagażnik ('trunk') jest w wersji 160 i masz nową funkcję, którą należy zapisać wraz z plikiem zapisu, po prostu zwiększ wersję zapisu. Jest to znane jako ''nierówność zapisu'' ('savegame bump') .

Kiedy normalna wersja OpenTTD próbuje załadować zapisaną grę z twojego systemu, zauważy zapadkę zapisu i z wdziękiem powie „Przepraszam, nie mogę załadować - to dla mnie zbyt nowe”.

Jednak podczas ładowania gry z wersją zapisu niższą niż określona w atrybucie '''from''' ('z') w twoim ustawieniu - OpenTTD będzie wiedział, że nie znajdzie tego ustawienia w pliku zapisu i ładowanie powinno się powieść.

Tak więc w powyższym przykładzie podbiliśmy grę do 189 w [http://svn.openttd.org/trunk/src/saveload/saveload.cpp saveload.cpp] i ustawiliśmy  <code>from</code> na 161 i <code>to</code> do <code>SL_MAX_VERSION</code> w obu naszych blokach w  [http://svn.openttd.org/trunk/src/table/settings.ini settings.ini] .

Teraz pozostaje tylko jedna rzecz do zrobienia - kompilacja! Jeśli wszystko jest w porządku, powinieneś zobaczyć coś podobnego do tego po prawej stronie.


[[Category:en/Archive/Source/OpenTTDDevBlackBook|P]] [[Category:pl/Archive/Source/OpenTTDDevBlackBook|P]]
[[Category:en/Development]] [[Category:pl/Rozwój]]