[[Translation:en/Community/NewGRF/Playing with 32 bpp graphics]]
<small><<Back to the [[en/Archive/Old 32bpp/32bit Graphics Development|32bit Graphics main page]]</small>
{{pl/Tłumaczenie|oryg. = en/Community/NewGRF/Playing with 32 bpp graphics
|z     = en
|na    = pl
|Procenty = 30}}{{en/-}}{{pl/Zgodne Wersje|0.6|align="right"}}

==Zwykłe zbliżenie==
# Pobierz dostępne  [[en/Archive/Old 32bpp/List of downloadable 32 bpp tars|grafiki 32bpp]].
# Włóż poprane plik(i) ''tar'' do folderu <code>data</code> w folderze z OpenTTD. Jest to ten sam folder, do którego wkładasz [[en/Manual/NewGRF]]-y.
# W pliku <code>openttd.cfg</code> (można edytować notatnikiem, bądź innym edytorem tekstu) dodaj <code>blitter = 32bpp-simple</code> pod sekcją <code>[misc]</code>. Zapisz zmiany. To niezawodny sposób na uruchomienie grafiki 32bit-owej - jeśli chcesz poznać więcej możliwości, zapoznać się z sekcją poniżej.

Pliki ''tar'' dostępne na tej Wiki są akceptowane '''tylko''' przez oryginalną, Windowsową wersję gry. Gracze używający DOS-owej wersji (to ta, w której pliki ''grf'' nazywają się:"''trg1.grf, trgc.grf, trgh.grf, trgi.grf'' i ''trgt.grf''"), muszą najpierw wypakować pliki ''tar'' do folderu ''data'', następnie wszystkim folderom w ''data/sprites'' powinno się zmienić nazwę zgodnie z odpowiadającymi plikami ''grf'' (np. ''trg1r'' na ''trg1'', ''trghr'' na ''trgh'' itd.).

===Advanced blitter options===

Even though you have 32bpp sprites set up in your <code>data</code> directory, OpenTTD does not display them by default. The game has to be told to use a 32bpp compatible blitter, also known as a sprite drawing engine. For this we usually use the <code>blitter =</code> line in <code>openttd.cfg</code>.
    
There are several blitters to choose from. They differ slightly in how they draw the sprites. Below is a list of available blitters and their properties.

;32bpp-simple
:Slower, but reliable. The <code>simple</code> blitter does no optimization at all on the sprite data, it just converts it from palettized 8bpp to 32bpp RGB.
;32bpp-optimized
:Faster. The <code>optimized</code> blitter will run-length encode the sprites' transparent regions to make drawing faster since almost every sprite is surrounded by at least some transparent areas. The optimized blitter also has animation disabled.
;32bpp-anim
:This is the same as the optimized blitter, except animation is enabled.

Sometimes for whatever reason the <code>blitter</code> setting in <code>openttd.cfg</code> cannot be used. As a fallback the blitter can be given to the OpenTTD binary as a parameter with <code>-b 32bpp-simple</code>, <code>-b 32bpp-anim</code> or <code>-b 32bpp-optimized</code>. The <code>-h</code> parameter lists all available blitters.

==Full Zoom==

* see the [[en/Community/NewGRF/Playing with 32 bpp graphics]] main page.


==Joining New Graphics Development==

Do you enjoy playing with 32bpp graphics? Would you like to contribute, in order to get full 32bpp graphics out sooner? We are in need of '''artists''', '''administrators''' (to do manual tasks such as keep the documentation organised) and '''coders''' (to help us code features to enable new graphics options)...

To draw 32bpp graphics for OpenTTD you need to know how to model in 3D (unless you are helping with some of the 2D tasks). For modeling software we suggest the open source 3D software '''blender''' available from [http://blender.org Blender site].

* visit our [[en/Archive/Old 32bpp/32bit Graphics Development Documentation]] section.

For further information on 32bpp development you can browse the [http://www.tt-forums.net/viewforum.php?f=36 OpenTTD Graphics forum on tt-forums]. Alternatively you can contact Ben Robbins, one of the leading members of the OpenTTD graphics community.


{{en/Archive/Old 32bpp/Navbox Graphics Development}}

[[Category:en/Archive/Community/New Graphics]][[Category:en/Archive/Old 32bpp/32bpp Graphics]]