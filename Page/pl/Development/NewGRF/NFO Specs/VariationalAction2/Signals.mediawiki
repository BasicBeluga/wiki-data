{{pl/Development/NewGRF/inne strony|en=newgrf-specs.tt-wiki.net/wiki/VariationalAction2/Signals|pl=pl/Development/NewGRF/NFO Specs/VariationalAction2/Signals}}
<!--{{-}}<br>--><!--{{ambox | text = w trakcie edycji.}}--><!-- -->
==Wprowadzenie==

Jest to dostępne od wersji TTDPatch 2.6 alpha 0 r1247 i późniejszych.

Ten typ VarAction2 wymaga zastosowania zaawansowanych obliczeń: [[pl/Development/NewGRF/NFO Specs/VarAction2Advanced|VarAction2Advanced]]

== Variables ==

== Description ==

=== Variable 10 ===

{| |-
!Bit!!Meaning
|-
|0||Green
|-
|1-3||Front facing: 0=SW, 1=NE, 2=NW, 3=SE, 4=E, 5=W, 6=S, 7=N
|-
|4-5||Presignals: 0=norm, 1=entrance, 2=exit, 3=combo
|-
|6||Semaphore
|-
|7||PBS
|-
|8||Restricted
|-
|9||Programmed
|-
|10||Through
|-
|11||Inverted
|}

Uwaga: są to te same bity, które byłyby użyte do zamówienia bloku Action5 typu 4.

=== Variable 18 ===

{| |-
!Bit!!Meaning
|-
|0-7||L5 of signal tile

&nbsp; 0: track in X

&nbsp; 1: track in Y

&nbsp; 2: track in N

&nbsp; 3: track in S

&nbsp; 4: track in W

&nbsp; 5: track in E
|-
|8-15||Low half of L3 of tile, bits 4-7 bitmask of which signals present as shown below, bits 0-3: track type
|-
|16-23||Which signal is currently being drawn, bit index of L3 signal mask:

&nbsp; * For track in the X direction:

&nbsp; &nbsp; &nbsp; 6: &nbsp;signal in the SW direction

&nbsp; &nbsp; &nbsp; 7: &nbsp;signal in the NE direction

&nbsp; * For track in the Y direction:

&nbsp; &nbsp; &nbsp; 6: &nbsp;signal in the NW direction

&nbsp; &nbsp; &nbsp; 7: &nbsp;signal in the SE direction

&nbsp; * For tracks in the W-E direction:

&nbsp; &nbsp; &nbsp; 4: &nbsp;signal in the W direction on the track in the S corner

&nbsp; &nbsp; &nbsp; 5: &nbsp;signal in the E direction on the track in the S corner

&nbsp; &nbsp; &nbsp; 6: &nbsp;signal in the W direction on the track in the N corner

&nbsp; &nbsp; &nbsp; 7: &nbsp;signal in the E direction on the track in the N corner

&nbsp; * For tracks in the N-S direction:

&nbsp; &nbsp; &nbsp; 4: &nbsp;signal in the S direction on the track in the E corner

&nbsp; &nbsp; &nbsp; 5: &nbsp;signal in the N direction on the track in the E corner

&nbsp; &nbsp; &nbsp; 6: &nbsp;signal in the S direction on the track in the W corner

&nbsp; &nbsp; &nbsp; 7: &nbsp;signal in the N direction on the track in the W corner
|-
|24-27||Land/Fence type
|-
|28-31||Terrain type: 0=normal, 1=desert, 2=rainforest, 4=snow
|}

=== Parameterised var 60 ===

Parametr to dwa podpisane przesunięcia, które można dodać do współrzędnych kafelka.

Niski węzeł jest dodawany do współrzędnej X (od prawej <small>''(top-right)''</small> do prawej do lewej z lewej <small>''(bottom-left)''</small>).

Wysoki węzeł jest dodawany do współrzędnej Y (od lewej górnej <small>''(top-left)''</small> do prawej dolnej <small>''(bottom-right)''</small>).

Informacje są pobierane z kafelka po dopasowaniu współrzędnych, zaczynając od kafelka, który jest obecnie rysowany.

{| |-
!Bit!!Meaning
|-
|0-7||L5
|-
|8-15||L3 low
|-
|16-20||Altitude of tile<<3
|-
|21-25||Slope map of tile
|-
|26||Tile has same owner
|-
|27||Semaphores
|-
|28||Tile has same track bits
|-
|29||Tile has same slope and altitude
|-
|30||Tile has signals
|-
|31||Tile is a track tile
|}

Zwracana wartość buforowana <small>''(cached)''</small> w varaction2var 10

== Output ==

=== Callback return value ===

{| |-
!Bit!!Meaning
|-
|0||Use new sprites
|-
|1-4||Num sprites, varaction2vars 0x20-2F
|-
|5||Use recolour sprite specified in varaction2var 0x30
|-
|6||Use ordinary signal sprite number: varaction2var 0x20, (this overrides all other bits)
|}

=== Varaction2var 20-2F value ===

{| |-
!Bit!!Meaning
|-
|0-12||Sprite offset into action5 block 0E.
|-
|13||Add sprite yrel to Y correction for next sprite (sub from 3D Z), (yrel must fit in a signed byte)
|-
|14-18||Sprite Y (-3D Z) correction for next sprite, (signed), (added to total)<br/>Overall change to 3D Z, (-Y correction), must be positive, else risk of TTD crashing
|-
|19-23||Sprite Y (-3D Z) correction for this sprite only, (signed), (not added to total)
|-
|24-27||Sprite X correction for next sprite << 1, (signed), (added to total)
|-
|28-31||Sprite X correction for this sprite only << 1, (signed), (not added to total)
|}

---

Do odniesienia do akcji 2 należy użyć ogólnej funkcji 0E 0E.

Oddzwonienie 0x146 wywoła tę akcję 3, gdy zostanie wyciągnięty sygnał.

Jeśli GRF nie obsługuje typu sygnału wskazanego w zmiennej 10, należy zwrócić niepoprawny wynik wywołania zwrotnego. Zwrócenie 0 zapobiegnie zapytaniu o nowe pliki GRF sygnału i spowoduje użycie domyślnej grafiki sygnału. Zwracanie 0 powinno być wykonywane tylko po to, aby jawnie zapobiec potencjalnemu pobieraniu nowych sygnałów przez GRF o niższym priorytecie.

Wynik wywołania zwrotnego powinien zostać zwrócony jako wynik obliczenia.

Bity 1-4 wyniku wywołania zwrotnego wskazują, ile wariacji varaction2vars rozpoczynających się od 0x20 zostanie użytych do określenia 'sprites' , które zostaną narysowane. Operator 0E powinien być używany do przechowywania odpowiednich wartości w zmiennych 0x20-2F i odpowiednio 30.

Ponowne kolorowanie 'sprites' określonych w varaction2var 0x30 i bit 5 wyniku wywołania zwrotnego są stosowane do wszystkich rysowanych 'sprites' .

=== Przykład ===

[http://tt-forums.net/viewtopic.php?p=529007#529007|Example GRF with NFO, PCX components.]