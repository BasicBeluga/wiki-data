[[Translation:en/Development/FAQ development]]
{{sr/Manual/Sadr≈æaj}}

Ovaj ƒçlanak daje odgovore na pitanja o razvoju OpenTTD, npr. kori≈°ƒáenje SVN, preuzimanje izvornog koda, pode≈°avanje kompajlera itd.

===Doprinos projektu===
====Kako ja mogu da pomognem projektu?====
:* Ovo zavisi od Va≈°eg znanja. Ako ste dobri u kodiranju, mo≈æete pomoƒái prilikom dodavanja novih funkcija ili ispravljanjem gre≈°aka. Takoƒëe, svaki drugi vid pomoƒái je dobrodo≈°ao, poput [[sr/Internacionalizacije|prevoƒëenja]] na druge jezike, crtanja grafike, pisanja ovog uputstva ili pravljenja zvukova i muzike.

====U kom programskom jeziku je napisan OpenTTD?====
:* OpenTTD je programiran u C++, ANSI-C flavor kori≈°ten od strane MS Visual Studio, konkretno. Proƒçitajte smernice oko [[sr/Stil kodiranja|stila kodiranja]] kao preporuku kako bi va≈° kod trebao da bude strukturisan.

====Ispravio sam gre≈°ku/dodao sam opciju. Kako mogu da podnesem to u bazu koda?====
:*Napravite diff fajl (iliti peƒç fajl) sa va≈°im izmenama i podnesite ga na [http://bugs.openttd.org Flajsprej]. Molimo Vas da pratite peƒçeve da vidite da li programeri imaju neki predlog. Ako je sve u redu sa va≈°im peƒçom, on ƒáe biti ukljuƒçen u SVN stablo.
:*Mo≈æete da napravite temu na [http://www.tt-forums.net/viewforum.php?f=33 na≈°em forumu] i da dodate va≈° peƒç na [[sr/Spisak peƒçeva|spisak peƒçeva]].

====≈Ωelim da postanem zvaniƒçni OpenTTD programer! Kako?====
:*Jedini naƒçin je da konstantno pravite peƒçeve, posebno one za ispravljanje gre≈°aka. Proverite spisak [http://bugs.openttd.org/index.php?string=&project=1&type=1 poznatih gre≈°aka] i imajte na umu na≈° [[sr/Stil kodiranja|stil kodiranja]]. Kada koliƒçina va≈°eg vremena koje ste utro≈°ili na programiranje OpenTTD dostigne na≈° nivo, ≈†anse su velike da ƒáete  dobiti SVN nalog i biti dodani na spisak.

===Izvorni kod===
====≈†ta je to izvorni kod?====
:* [http://www.google.com/search?q=C%2B%2B+tutorial Ne brinite se oko njega i ne zamarajte se da ƒçitate ostatak ovoga.]

====Kako mogu da dobijem izvorni kod?====
Prvenstveno izvorni kod dobijate preko sistema kontrole verzija (version control system - VCS). On omoguƒáava laku proveru koda i nadogradnju na bilo koju verziju (mo≈æda najnoviju jer radne verzije imaju novu opciju ili neku posebnu koja je neophodna za specifiƒçan peƒç) koja vam je potrebna. Ako nameravate da koristite peƒçeve, prevashodno koristite mercurial ili git, jer su najpogodniji za a≈æuriranje i upravljanje peƒçovanim verzijama.
:* Subversion: <code>svn checkout svn://svn.openttd.org/trunk</code>
:* Mercurial: <code>hg clone http://hg.openttd.org/openttd/trunk.hg</code>
:* Git: <code>http://git.openttd.org/openttd/trunk.git/</code> (alternatively <code>git://git.openttd.org/openttd/trunk.git/</code>)
Imajte ne umu da se nove revizije mogu pojaviti u git skladi≈°tu preko HTTP sa zaka≈°njenjem od par sati. Ovo ka≈°njenje se ne javlja ako koristite git protokol. 

Izvorni kod mo≈æete pribaviti jo≈° putem tar bala, ali izbegavajte ovo, ako ste u moguƒánosti da iskoristite VCS:
:* Poslednja objavljena verzija:  [http://www.openttd.org/download-stable  Preuzmite sa sajta]
:* [[sr/Radne verzije|Radne verzije]]: [http://nightly.openttd.org/ Preuzmite sa sajta radnih verzija]

====≈†ta su SVN verzije?====
:* SVN ili [https://www.wikipedia.org/wiki/Subversion_%28software%29 Subverzije] su sistemi za kontrolu verzija poput CVS. U osnovi on prati izmene izvornog koda igre. SVN verzija predstavlja najnoviji izvorni kod igre.

====Na kom operativnom sistemu radi Subversion?====
:* Na bilo kom modernom Uniksolikom (Mek OS X, Linuks, BSD, ...), Vin32, BeOS/Haiku, OS/2. Subversion je naposan u ANSI C i koristi APR, Apache Portable Runtime biblioteku, kao sloj za portabilnost. Subversion klijent ƒáe raditi gde god APR radi, znaƒçi na mnogo mesta.

====Kako da nabavim SVN verziju?====
:* First you need to download the client software for your operating system which will connect to the SVN server and download the source code. You can get it from the SVN project homepage at http://subversion.apache.org/. If you are using Windows you may want to get [http://tortoisesvn.tigris.org/ TortoiseSVN] as it integrates with Explorer nicely and you won't have to run command line stuff.<br><br>Next you need to set up the client to use the repository url which is ''"svn://svn.openttd.org/trunk"''. This will depend on which software you get, but you can find out how to do this with the documentation included with it.<br><br> On Linux (Unix) you can use command ''"svn co svn://svn.openttd.org/trunk/"''.<br><br>On MacOSX Xcode can handle both SVN and Git by itself so no need to install anything (unless you haven't got Xcode yet).

====Subversion has not been ported to my platform / I don't want to install more software - is there any other way I can get to the source code?====
:* You can view the repository online at http://svn.openttd.org/, you can also checkout copies so you will be able to get a complete set of source code. You can also get the latest nightly source code from http://nightly.openttd.org/.

====Now I have got the source code how can I compile it?====
:* Compiling OpenTTD on Windows using [[:Category:en/Development/Microsoft Visual C++|Microsoft Visual C++]]
:* Compiling OpenTTD on Windows using [[en/Archive/Compilation and Ports/Compiling on Windows using MinGW|MinGW]]
:* Compiling OpenTTD on [[en/Archive/Compilation and Ports/Compiling on GNU‚àïLinux and üüâBSD|Linux]]
:* Compiling OpenTTD on [[en/Archive/Compilation and Ports/Compiling on Mac OS X|Mac OS X]]
:* Compiling OpenTTD on [[en/Archive/Compilation and Ports/Compiling on Solaris|Solaris]]
:* Compiling OpenTTD on [[en/Archive/Compilation and Ports/Compiling on Haiku|Haiku]]

To test the compiler setup, try compiling the game from source code without applying any patch (see below), and run the resulting executable. If all goes well, you can be fairly sure the setup is good.
If it fails, you know for sure the patch is not the source of the problems.

====I had a problem compiling! What should I do?====
:* This is not a compiling FAQ, try to ask your compiler vendor for help.
====Why did the developers decide to use Subversion?====
:* Subversion (SVN) was chosen over CVS because it is more advanced and easier to use. Also a lot of the developers don't like CVS any more now they know SVN.
:* SVN was "chosen" over distributed version control systems (DVCS) like Bazaar, Darcs, git, Mercurial and SVK because at the time the choice had to be made none of these existed. GNU arch was one of the few DVCSes that existed but was difficult to learn and understand. Later on a versioning API for NewGRFs was made out of the SVN revision so migrating to a DVCS would remove that capability breaking lots of existing NewGRFs.

====What is the point of a version control system? Why don't they just upload the source code to an FTP directory?====
:* Version control systems keep track of all the changes, when they were made and by who. If the developers later find out something they did was a mistake and broke something important they may have to rewrite it from scratch. With this they can just 'checkout' a revision from when it was working. It also allows the developers to add comments so they know what changes have been done.
====How do I make a diff file to share my changes with other coders?====
:* In Linux, use the command "svn diff > mypatch.diff" from the source directory to create a diff file.
:* In Windows, you can do the same from the command prompt, or, if you have Tortoise SVN, right button in the source directory and press Create Patch. It will ask for a location and filename.

====How to apply a patch?====
It's usually best to apply patches to the revision stated by the patch creator.

Different version control systems use different ways of expressing changes. Currently, there are SVN type patches and HG/GIT type patches.
To know what you have, open the patch file with a text editor, and look at the first few lines.

A SVN type patch starts like
<pre>
Index: src/gfx.cpp
===================================================================
--- src/gfx.cpp (revision 20024)
+++ src/gfx.cpp (working copy)
@@ -641,14 +641,13 @@
...
</pre>

and a HG/GIT type patch starts like
<pre>
diff --git a/src/gfx.cpp b/src/gfx.cpp
--- a/src/gfx.cpp
+++ b/src/gfx.cpp
@@ -641,14 +641,13 @@
...
</pre>
The crucial difference is the <code>a/</code> and <code>b/</code> additions at the lines starting with <code>---</code> and <code>+++</code>.


*'''Unix shell (Windows using MSYS/MinGW, Mac OS X, Linux, ...):''' Type the following line into a console (replace patch_name with the filename of the patch):
:<code>patch -p0 < patch_name</code> (for SVN type patches). However, in some cases you might need <code>patch -p1 < patch_name</code> (for HG/GIT type patches).
 
*'''Windows, graphical:''' Make sure you have [http://tortoisesvn.tigris.org TortoiseSVN] installed.
{{en/Warning| TortoiseSVN can only handle SVN type patches, it '''CANNOT''' handle HG/GIT type patches!!}}
:Right-click on the folder with the OpenTTD source code, open the TortoiseSVN submenu and select 'Apply Patch...'. Browse to the patch file and select it. Then, right click on the 'File Patches' window and click on 'Patch All'. After you're done, close the TortoiseMerge window.

[[Category:sr/Najƒçe≈°ƒáa pitanja]]
[[Category:sr/Razvoj]]